MH <- read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv') %>%
dplyr::select("M.H1_1":"M.H35_1")
library(tidyverse)
library(psych)
library(corrplot)
library(moments)
source("reverseCode.R")
source("../reverseCode.R")
library(tidyverse)
library(psych)
library(corrplot)
library(moments)
source("../reverseCode.R")
library(psych)
library(EFAtools)
library(EFA.dimensions)
library(corrplot)
MH <- read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv') %>%
dplyr::select("M.H1_1":"M.H35_1")
library(tidyverse)
library(psych)
library(corrplot)
library(moments)
source("../reverseCode.R")
library(psych)
library(EFAtools)
library(EFA.dimensions)
library(corrplot)
MH <- read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv') %>%
dplyr::select("M.H1_1":"M.H35_1")
#removing check questions
MH <- MH[-c(32:34)]
cols_reverse <- c("M.H6_1","M.H7_1","M.H12_1","M.H14_1","M.H17_1","M.H18_1","M.H20_1","M.H23_1","M.H29_1","M.H30_1",
"M.H32_1")
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode, min=1, max=7)
updateMH <- MH[complete.cases(MH),]
#initial determination of factor structure
#Kaiser's criterion
fafitfree <- fa(updateMH,nfactors = ncol(updateMH), rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
n_factors <- length(fafitfree$e.values)
scree     <- data.frame(
Factor_n =  as.factor(1:n_factors),
Eigenvalue = fafitfree$e.values)
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red")
#parallel analysis
parallel <- fa.parallel(updateMH)
#MAP
MAP <- vss(updateMH) #suggests 5 factors
MAP <- MAP[["map"]]
print(MAP)
#McDonald Omega Test on 5 + 6 factors
fa.none <- psych::fa(r=updateMH,
nfactors = 5,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=1000,
rotate="oblimin") # no rotation
print(fa.none)
fa.diagram(fa.none)
SL_transformation <- EFAtools::SL(fa.none)
SL_transformation <- SL_transformation[[1]]
omega <-omega(SL_transformation, nfactors=5,n.iter=1,p=.05,poly=FALSE,key=NULL,
flip=TRUE,digits=2, title="Omega",sl=TRUE,labels=NULL,
plot=TRUE)
summary(omega)
#extracting factors
#FA w/ one factor
fa.none <- psych::fa(r=updateMH,
nfactors = 1,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="varimax")
#parallel analysis on residual to find factor #
residual <- fa.none[["residual"]]
parallel <- fa.parallel(residual) #suggests 4 factors
MAP <- vss(residual) #suggests 5 factors
MAP <- MAP[["map"]]
print(MAP)
fafitfree <- fa(residual,nfactors = ncol(residual), rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
n_factors <- length(fafitfree$e.values)
scree     <- data.frame(
Factor_n =  as.factor(1:n_factors),
Eigenvalue = fafitfree$e.values)
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red")
#item reduction on this factor structure
fa.none <- psych::fa(r=updateMH,
nfactors = 7,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="oblimin") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none)
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
updateMH <- dplyr::select(updateMH, -c("M.H17_1", "M.H20_1", "M.H18_1","M.H19_1","M.H13_1","M.H27_1","M.H23_1"))
#determine new no. of factors
#FA w/ one factor
fa.none <- psych::fa(r=updateMH,
nfactors = 1,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="varimax")
#parallel analysis on residual to find factor #
residual <- fa.none[["residual"]]
parallel <- fa.parallel(residual)
MAP <- vss(residual)
MAP <- MAP[["map"]]
print(MAP)
fafitfree <- fa(residual,nfactors = ncol(residual), rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
n_factors <- length(fafitfree$e.values)
scree     <- data.frame(
Factor_n =  as.factor(1:n_factors),
Eigenvalue = fafitfree$e.values)
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red")
#item reduction on this factor structure
fa.none <- psych::fa(r=updateMH,
nfactors = 6,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="oblimin") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none)
SL_transformation <- SL_transformation[[2]]
SL_transformation
#run again
updateMH <- dplyr::select(updateMH, -c("M.H15_1", "M.H24_1"))
#determine new no. of factors
#FA w/ one factor
fa.none <- psych::fa(r=updateMH,
nfactors = 1,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="varimax")
#parallel analysis on residual to find factor #
residual <- fa.none[["residual"]]
parallel <- fa.parallel(residual)
MAP <- vss(residual)
MAP <- MAP[["map"]]
print(MAP)
fafitfree <- fa(residual,nfactors = ncol(residual), rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
n_factors <- length(fafitfree$e.values)
scree     <- data.frame(
Factor_n =  as.factor(1:n_factors),
Eigenvalue = fafitfree$e.values)
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red") #suggests 7 factors
#item reduction on this factor structure
fa.none <- psych::fa(r=updateMH,
nfactors = 7,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="oblimin") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none)
SL_transformation <- SL_transformation[[2]]
SL_transformation
#run again
updateMH <- dplyr::select(updateMH, -c("M.H22_1", "M.H31_1"))
#determine new no. of factors
#FA w/ one factor
fa.none <- psych::fa(r=updateMH,
nfactors = 1,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="varimax")
#parallel analysis on residual to find factor #
residual <- fa.none[["residual"]]
parallel <- fa.parallel(residual)
MAP <- vss(residual)
MAP <- MAP[["map"]]
print(MAP)
fafitfree <- fa(residual,nfactors = ncol(residual), rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
n_factors <- length(fafitfree$e.values)
scree     <- data.frame(
Factor_n =  as.factor(1:n_factors),
Eigenvalue = fafitfree$e.values)
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red")
#item reduction on this factor structure
fa.none <- psych::fa(r=updateMH,
nfactors = 5,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="oblimin") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none)
SL_transformation <- SL_transformation[[2]]
SL_transformation
scores <- factor.scores(as.matrix(updateMH), SL_transformation, method="components")
scores <- scores$scores
scores <- cbind(data[20], scores)
scores <- cbind(data[20], scores)
data<-read.csv(file='../data/all_scored.csv')
data<-read.csv(file='../../data/all_scored.csv')
data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
View(data)
scores <- factor.scores(as.matrix(updateMH), SL_transformation, method="components")
scores <- cbind(data[20], scores)
scores <- factor.scores(as.matrix(updateMH), SL_transformation, method="components")
View(scores)
scores <- scores$scores
data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv') %>%
data[complete.cases(select("M.H1_1":"M.H35_1")),]
data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv') %>%
data[complete.cases(MH[199:229]),]
data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv') %>%
data[complete.cases(data[199:229]),]
data <- data[complete.cases(data[199:229]),]
scores <- cbind(data[20], scores)
View(scores)
write.csv(scores, file =  "../../data/m@hr/efa_factorscores.csv")
library(tidyverse)
library(corrplot)
library(corrplot)
data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
scores <- read.csv(file =  "../../data/m@hr/efa_factorscores.csv")
View(scores)
merge(data, scores)
full <- merge(data, scores)
View(full)
#removing anyone missing ELA measures
full <- data[complete.cases(data[391:418]),]
#M@HR + GoldMSI
variables = dplyr::select(full,
g, F1, F2, F3, F4, F5,
Gold_activeengagement, Gold_perceptualabilities, Gold_musicaltraining, Gold_singingabilities,
Gold_emotion, Gold_musicalsophistication)
full <- merge(data, scores)
#removing anyone missing ELA measures
full <- data[complete.cases(data[391:418]),]
full <- merge(data, scores)
#removing anyone missing ELA measures
full <- full[complete.cases(full[391:418]),]
#M@HR + GoldMSI
variables = dplyr::select(full,
g, F1, F2, F3, F4, F5,
Gold_activeengagement, Gold_perceptualabilities, Gold_musicaltraining, Gold_singingabilities,
Gold_emotion, Gold_musicalsophistication)
View(data)
data<-read.csv(file='../../data/pleasing-displeasing_followup/perception/all_scored.csv')
scores <- read.csv(file =  "../../data/m@hr/efa_factorscores.csv")
full <- merge(data, scores)
#removing anyone missing ELA measures
full <- full[complete.cases(full[391:418]),]
data<-read.csv(file='../../data/pleasing-displeasing_followup/perception/all_scored.csv')
scores <- read.csv(file =  "../../data/m@hr/efa_factorscores.csv")
full <- merge(data, scores)
data<-read.csv(file='../data/pleasing-displeasing_followup/scored_data.csv')
data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
scores <- read.csv(file =  "../../data/m@hr/efa_factorscores.csv")
full <- merge(data, scores)
library(tidyverse)
source("reverseCode.R")
library(tidyverse)
source("reverseCode.R")
survey <- read.csv(file="../data/pleasing-displeasing_followup/Displeasing)_November 16, 2022_18.21.csv")
### CHILDHOOD ###
#QUIC Scoring
QUIC_child <- survey %>%
select("QUIC_Child_2":"QUIC_Child_38")
#recode verbal responses (if not numbers)
QUIC_child[QUIC_child == "Yes"] <- as.numeric(1)
QUIC_child[QUIC_child == "No"] <- as.numeric(0)
QUIC_child[1:22] <- as.numeric(unlist(QUIC_child[1:22]))
cols_reverse <- c("QUIC_Child_8", "QUIC_Child_15", "QUIC_Child_17", "QUIC_Child_36")
cols_parentalpredictability <- c("QUIC_Child_2", "QUIC_Child_8","QUIC_Child_11", "QUIC_Child_12", "QUIC_Child_15","QUIC_Child_16", "QUIC_Child_17","QUIC_Child_31","QUIC_Child_32","QUIC_Child_33", "QUIC_Child_34","QUIC_Child_35")
cols_physiscalenvironment <- c("QUIC_Child_13", "QUIC_Child_20",  "QUIC_Child_26", "QUIC_Child_27", "QUIC_Child_36", "QUIC_Child_37", "QUIC_Child_38")
cols_safetyandsecurity <- c("QUIC_Child_23", "QUIC_Child_24", "QUIC_Child_25")
# Reverse code
QUIC_child[cols_reverse] <- lapply(QUIC_child[cols_reverse], reverseCode, min=0, max=1)
#scoring
survey$QUIC_child_total <- apply(QUIC_child,1, sum)
survey$QUIC_child_parentalpredictability <- apply(QUIC_child[cols_parentalpredictability], 1,sum)
survey$QUIC_child_physiscalenvironment <- apply(QUIC_child[cols_physiscalenvironment], 1,sum)
survey$QUIC_child_safetyandsecurity <- apply(QUIC_child[cols_safetyandsecurity], 1,sum)
hist(survey$QUIC_child_total)
### ADOLESCENCE ###
#QUIC Scoring
QUIC_Adolescence <- survey %>%
select("QUIC_Adolescence_2":"QUIC_Adolescence_38")
#recode verbal responses (if not numbers)
QUIC_Adolescence[QUIC_Adolescence == "Yes"] <- as.numeric(1)
QUIC_Adolescence[QUIC_Adolescence == "No"] <- as.numeric(0)
QUIC_Adolescence[1:22] <- as.numeric(unlist(QUIC_Adolescence[1:22]))
cols_reverse <- c("QUIC_Adolescence_8", "QUIC_Adolescence_15", "QUIC_Adolescence_17", "QUIC_Adolescence_36")
cols_parentalpredictability <- c("QUIC_Adolescence_2", "QUIC_Adolescence_8","QUIC_Adolescence_11", "QUIC_Adolescence_12", "QUIC_Adolescence_15","QUIC_Adolescence_16", "QUIC_Adolescence_17","QUIC_Adolescence_31","QUIC_Adolescence_32","QUIC_Adolescence_33", "QUIC_Adolescence_34","QUIC_Adolescence_35")
cols_physiscalenvironment <- c("QUIC_Adolescence_13", "QUIC_Adolescence_20",  "QUIC_Adolescence_26", "QUIC_Adolescence_27", "QUIC_Adolescence_36", "QUIC_Adolescence_37", "QUIC_Adolescence_38")
cols_safetyandsecurity <- c("QUIC_Adolescence_23", "QUIC_Adolescence_24", "QUIC_Adolescence_25")
# Reverse code
QUIC_Adolescence[cols_reverse] <- lapply(QUIC_Adolescence[cols_reverse], reverseCode, min=0, max=1)
#scoring
survey$QUIC_Adolescence_total <- apply(QUIC_Adolescence,1, sum)
survey$QUIC_Adolescence_parentalpredictability <- apply(QUIC_Adolescence[cols_parentalpredictability], 1,sum)
survey$QUIC_Adolescence_physiscalenvironment <- apply(QUIC_Adolescence[cols_physiscalenvironment], 1,sum)
survey$QUIC_Adolescence_safetyandsecurity <- apply(QUIC_Adolescence[cols_safetyandsecurity], 1,sum)
hist(survey$QUIC_Adolescence_total)
cor.test(survey$QUIC_child_total, survey$QUIC_Adolescence_total)
ggplot(data=survey, aes(x=QUIC_child_total, y=QUIC_Adolescence_total)) + geom_point()
survey$QUIC_sum <- survey$QUIC_child_total + survey$QUIC_Adolescence_total
master <- read.csv(file="../../data/pleasing-displeasing_followup/pleasing_displeasing_scored.csv")
library(tidyverse)
library(corrplot)
library(corrplot)
scored_data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
scores <- read.csv(file =  "../../data/m@hr/efa_factorscores.csv")
master <- read.csv(file="../../data/pleasing-displeasing_followup/pleasing_displeasing_scored.csv")
names(scores)[2] <- "ID"
names(scored_data)[20] <- "ID"
View(scored_data)
full <- merge(data, scores)
full <- merge(scored_data, scores)
full <- merge(master, full)
full <- merge(scored_data, master)
master <- master[-1]
names(master)[1] <- "ID"
full <- merge(scored_data, master)
library(tidyverse)
library(corrplot)
library(corrplot)
scored_data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
scores <- read.csv(file =  "../../data/m@hr/efa_factorscores.csv")
master <- read.csv(file="../../data/pleasing-displeasing_followup/pleasing_displeasing_scored.csv")
names(scores)[2] <- "ID"
names(scored_data)[20] <- "ID"
master <- master[-1]
names(master)[1] <- "ID"
View(master)
merge(scores, master)
merge(scored_data, master)
merge(scored_data, master,by.x="ID", by.y="ID")
full <- merge(full, scores,by.x="ID", by.y="ID")
full <- merge(scored_data, master,by.x="ID", by.y="ID")
full <- merge(full, scores,by.x="ID", by.y="ID")
#removing anyone missing ELA measures
full <- full[complete.cases(full[391:418]),]
#M@HR + GoldMSI
variables = dplyr::select(full,
g, F1, F2, F3, F4, F5,
Gold_activeengagement, Gold_perceptualabilities, Gold_musicaltraining, Gold_singingabilities,
Gold_emotion, Gold_musicalsophistication)
output = corr.test(variables)
corr_matrix = output$r
p_matrix <- output$p
colnames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singingg', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication")
colnames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singing', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication")
rownames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singingg', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication")
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1))
#M@HR + ELA measures
variables = dplyr::select(full,
g, F1, F2, F3, F4, F5, QUIC_child_total,
CHAOS_child_total, deprivation_child_total, threat_childhood_total)
output = corr.test(variables)
corr_matrix = output$r
p_matrix <- output$p
colnames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singingg', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies', "QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
rownames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singingg', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies', "QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1))
#M@HR + eBMRQ
#generate correlation matrix
#gather variables of interest
variables = dplyr::select(full,
g, F1, F2, F3, F4, F5,
BMRQ_total, BMRQ_moodreg, BMRQ_emotion, BMRQ_socialreward,
BMRQ_absorption, BMRQ_musicseek, BMRQ_sensorimotor)
output = corr.test(variables)
corr_matrix = output$r
p_matrix <- output$p
colnames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singingg', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies','Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor')
rownames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singingg', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies','Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor')
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1))
#M@HR + eBMRQ
#generate correlation matrix
#gather variables of interest
variables = dplyr::select(full,
g, F1, F2, F3, F4, F5,
BMRQ_total, BMRQ_moodreg, BMRQ_emotion, BMRQ_socialreward,
BMRQ_absorption, BMRQ_musicseek, BMRQ_sensorimotor)
output = corr.test(variables)
corr_matrix = output$r
p_matrix <- output$p
colnames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singing', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies','Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor')
rownames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singing', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies','Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor')
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1))
#M@HR + eBMRQ
#generate correlation matrix
#gather variables of interest
variables = dplyr::select(full,
g, F1, F2, F3, F4, F5,
BMRQ_total, BMRQ_moodreg, BMRQ_emotion, BMRQ_socialreward,
BMRQ_absorption, BMRQ_musicseek, BMRQ_sensorimotor)
output = corr.test(variables)
corr_matrix = output$r
#M@HR + ELA measures
variables = dplyr::select(full,
g, F1, F2, F3, F4, F5, QUIC_child_total,
CHAOS_child_total, deprivation_child_total, threat_childhood_total)
#M@HR + ELA measures
variables = dplyr::select(full,
g, F1, F2, F3, F4, F5, QUIC_child_total,
CHAOS_child_total, deprivation_child_total, threat_childhood_total)
output = corr.test(variables)
corr_matrix = output$r
p_matrix <- output$p
colnames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singing', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies', "QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
rownames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Singing', 'Attitude to Childhood Music', 'Social Contexts', 'Music-Making Tendencies', "QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1))
m1 <- lm(data=full, BMRQ_social ~ F1 + F2 + F3 + F4 + F5)
m1 <- lm(data=full, BMRQ_socialreward ~ F1 + F2 + F3 + F4 + F5)
summary(m1)
m1 <- lm(data=full, HUMS_adult_healthy ~ F1 + F2 + F3 + F4 + F5)
summary(m1)
m1 <- lm(data=full, HUMS_adult_unhealthy ~ F1 + F2 + F3 + F4 + F5)
summary(m1)
m1 <- lm(data=full, BMRQ_total ~ F1 + F2 + F3 + F4 + F5)
summary(m1)
all_scored <- read.csv(file="../../data/pleasing-displeasing_followup/music_usage/all_scored.csv")
m1 <- lm(BMRQ_total ~ CHAOS_sum + QUIC_sum + deprivation_sum + Threat_sum + PASS_total + STAI_total, data=all_scored)
summary(m1)
m2 <- lm(HUMS_adult_healthy ~ CHAOS_sum + QUIC_sum + deprivation_sum + Threat_sum + PASS_total + STAI_total, data=all_scored)
summary(m2)
m3 <- lm(HUMS_adult_unhealthy ~ CHAOS_sum + QUIC_sum + deprivation_sum + Threat_sum + PASS_total + STAI_total, data=all_scored)
summary(m3)
m1 <- lm(BMRQ_absorption ~ CHAOS_sum + QUIC_sum + deprivation_sum + Threat_sum + PASS_total + STAI_total, data=all_scored)
summary(m1)
all_scored <- read.csv(file="../../data/pleasing-displeasing_followup/music_usage/all_scored.csv")
m1 <- lm(BMRQ_absorption ~ CHAOS_sum + QUIC_sum + deprivation_sum + Threat_sum + PASS_total + STAI_total + BMRQ_absorption, data=all_scored)
summary(m1)
m3 <- lm(HUMS_adult_unhealthy ~ CHAOS_sum + QUIC_sum + deprivation_sum + Threat_sum + PASS_total + STAI_total + BMRQ_absorption, data=all_scored)
summary(m3)
m2 <- lm(HUMS_adult_healthy ~ CHAOS_sum + QUIC_sum + deprivation_sum + Threat_sum + PASS_total + STAI_total + BMRQ_absorption, data=all_scored)
summary(m2)
