MH <- MH[-c(32:34)]
#removing items from FA
MH <- dplyr::select(MH, -c("M.H13_1","M.H15_1","M.H17_1","M.H18_1","M.H19_1", "M.H20_1","M.H22_1", "M.H23_1","M.H24_1","M.H27_1","M.H31_1",
))
# Reverse code
cols_reverse <- c("M.H6_1","M.H7_1","M.H12_1","M.H14_1","M.H29_1","M.H30_1",
"M.H32_1")
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode, min=1, max=7)
cols_caregiverbeliefs <- c("M.H1_1", "M.H2_1","M.H3_1", "M.H4_1")
cols_caregiversinging <- c("M.H9_1","M.H10_1","M.H12_1","M.H16_1")
cols_childhoodattitude <- c("M.H29_1", "M.H30_1", "M.H32_1")
cols_socialcontexts <- c("M.H21_1", "M.H25_1","M.H26_1","M.H28_1")
cols_musicmaking <- c("M.H5_1", "M.H6_1", "M.H7_1", "M.H8_1", "M.H14_1")
survey$MH_total <- apply(MH,1,sum)
survey$MH_caregiverbeliefs <- apply(MH[cols_caregiverbeliefs], 1,sum)
survey$MH_caregiversinging <- apply(MH[cols_caregiversinging], 1,sum)
survey$MH_childhoodattitude <- apply(MH[cols_childhoodattitude], 1,sum)
survey$MH_socialcontexts <- apply(MH[cols_socialcontexts], 1,sum)
survey$MH_musicmaking <- apply(MH[cols_musicmaking], 1,sum)
hist(survey$MH_total)
#isolate survey you're scoring
STAI <- survey %>%
select("STAI1_1":"STAI20_1")
cols_reverse <- c("STAI1_1","STAI3_1","STAI6_1","STAI7_1","STAI10_1","STAI13_1","STAI14_1","STAI16_1","STAI19_1")
STAI[cols_reverse] <- lapply(STAI[cols_reverse], reverseCode, min=1, max=4)
#if it is a simple subscore (i.e. no reverse coding or anything)
survey$STAI_total <- apply(STAI,1,sum)
hist(survey$STAI_total)
#CD-RISC Scoring
CD.RISC <- survey %>%
select("CD.RISC1_1":"CD.RISC10_1")
survey$CD.RISC_total <- apply(CD.RISC,1,sum)
hist(survey$CD.RISC_total)
#TIPI Scoring
TIPI <- survey %>%
select("Q3.1_1":"Q3.1_10")
survey$TIPI_total <- apply(TIPI,1,sum)
#STOMP Scoring
STOMP <- survey %>%
select("STOMP_1":"STOMP_10")
survey$STOMP_total <- apply(STOMP,1,sum)
library(tidyverse)
library(psych)
library(corrplot)
library(moments)
source("../reverseCode.R")
library(psych)
library(EFAtools)
library(EFA.dimensions)
library(corrplot)
data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
data <- data[complete.cases(data[199:229]),]
MH <- read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv') %>%
dplyr::select("M.H1_1":"M.H35_1")
#removing check questions
MH <- MH[-c(32:34)]
cols_reverse <- c("M.H6_1","M.H7_1","M.H12_1","M.H14_1","M.H17_1","M.H18_1","M.H20_1","M.H23_1","M.H29_1","M.H30_1",
"M.H32_1")
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode, min=1, max=7)
updateMH <- MH[complete.cases(MH),]
#initial determination of factor structure
#Kaiser's criterion
fafitfree <- fa(updateMH,nfactors = 6, rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
#initial determination of factor structure
#Kaiser's criterion
fafitfree <- fa(updateMH,nfactors = 6, rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
n_factors <- length(fafitfree$e.values)
scree     <- data.frame(
Factor_n =  as.factor(1:n_factors),
Eigenvalue = fafitfree$e.values)
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red") #suggests 6
#parallel analysis
parallel <- fa.parallel(updateMH)
#MAP
MAP <- vss(updateMH) #suggests 6 factors
MAP <- MAP[["map"]]
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red") #suggests 7
#parallel analysis
parallel <- fa.parallel(updateMH)
#MAP
MAP <- vss(updateMH) #suggests 6 factors
MAP <- MAP[["map"]]
print(MAP)
#McDonald Omega Test on 6 factors
fa.none <- psych::fa(r=updateMH,
nfactors = 6,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=1000,
rotate="oblimin") # no rotation
print(fa.none)
fa.diagram(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych",method="ML")
SL_transformation <- SL_transformation[[1]]
omega <-omega(SL_transformation, nfactors=6,n.iter=1,p=.05,poly=FALSE,key=NULL,
flip=TRUE,digits=2, title="Omega",sl=TRUE,labels=NULL,
plot=TRUE)
summary(omega)
#extracting factors
#FA w/ one factor
fa.none <- psych::fa(r=updateMH,
nfactors = 1,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="varimax")
#parallel analysis on residual to find factor #
residual <- fa.none[["residual"]]
parallel <- fa.parallel(residual) #suggests 4 factors
MAP <- vss(residual) #suggests 5 factors
MAP <- MAP[["map"]]
print(MAP)
fafitfree <- fa(residual,nfactors = ncol(residual), rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
n_factors <- length(fafitfree$e.values)
scree     <- data.frame(
Factor_n =  as.factor(1:n_factors),
Eigenvalue = fafitfree$e.values)
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red") #suggests 7
#item reduction on this factor structure
fa.none <- psych::fa(r=updateMH,
nfactors = 7,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="oblimin") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych",method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
updateMH <- dplyr::select(updateMH, -c("M.H17_1", "M.H20_1", "M.H18_1","M.H19_1","M.H13_1","M.H27_1","M.H23_1"))
#determine new no. of factors
#FA w/ one factor
fa.none <- psych::fa(r=updateMH,
nfactors = 1,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="varimax")
#parallel analysis on residual to find factor #
residual <- fa.none[["residual"]]
parallel <- fa.parallel(residual) #suggests 4
MAP <- vss(residual)
MAP <- MAP[["map"]]
print(MAP) #suggests 4
fafitfree <- fa(residual,nfactors = ncol(residual), rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
n_factors <- length(fafitfree$e.values)
scree     <- data.frame(
Factor_n =  as.factor(1:n_factors),
Eigenvalue = fafitfree$e.values)
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red") #suggests 6
#item reduction on this factor structure (6 has best BIC + RSMEA)
fa.none <- psych::fa(r=updateMH,
nfactors = 6,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="oblimin") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych",method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#run again
updateMH <- dplyr::select(updateMH, -c("M.H15_1", "M.H24_1"))
#determine new no. of factors
#FA w/ one factor
fa.none <- psych::fa(r=updateMH,
nfactors = 1,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="varimax")
#parallel analysis on residual to find factor #
residual <- fa.none[["residual"]]
parallel <- fa.parallel(residual) #suggests 4
MAP <- vss(residual)
MAP <- MAP[["map"]] #suggests 4
print(MAP)
fafitfree <- fa(residual,nfactors = ncol(residual), rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
n_factors <- length(fafitfree$e.values)
scree     <- data.frame(
Factor_n =  as.factor(1:n_factors),
Eigenvalue = fafitfree$e.values)
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red") #suggests 5 factors
#item reduction on this factor structure
fa.none <- psych::fa(r=updateMH,
nfactors = 5,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="oblimin") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych",method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#run again
updateMH <- dplyr::select(updateMH, -c("M.H22_1", "M.H31_1"))
#determine new no. of factors
#FA w/ one factor
fa.none <- psych::fa(r=updateMH,
nfactors = 1,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="varimax")
#parallel analysis on residual to find factor #
residual <- fa.none[["residual"]]
parallel <- fa.parallel(residual) #suggests 3
MAP <- vss(residual)
MAP <- MAP[["map"]]
print(MAP) #suggests 4
fafitfree <- fa(residual,nfactors = ncol(residual), rotate = "oblimin",covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100)
n_factors <- length(fafitfree$e.values)
scree     <- data.frame(
Factor_n =  as.factor(1:n_factors),
Eigenvalue = fafitfree$e.values)
ggplot(scree, aes(x = Factor_n, y = Eigenvalue, group = 1)) +
geom_point() + geom_line() +
xlab("Number of factors") +
ylab("Initial eigenvalue") +
labs( title = "Scree Plot",
subtitle = "(Based on the unreduced correlation matrix)")+
geom_line(y=1,color="red") #suggests 5
#item reduction on this factor structure
fa.none <- psych::fa(r=updateMH,
nfactors = 5,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="oblimin") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych",method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
library(tidyverse)
library(corrplot)
library(psych)
source("../reverseCode.R")
# R command to get corrplot2 from github
source("https://raw.githubusercontent.com/dorianps/corrplot2/master/corrplot2.R")
scored_data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
master <- read.csv(file="../../data/pleasing-displeasing_followup/pleasing_displeasing_scored.csv")
#names(scored_data)[20] <- "ID"
master <- master[-1]
names(master)[1] <- "ID"
#scoring
MH <- scored_data %>%
dplyr::select("M.H1_1":"M.H35_1")
MH <- MH[-c(32:34)] %>%
dplyr::select(-c("M.H17_1", "M.H20_1", "M.H18_1","M.H19_1","M.H13_1","M.H27_1","M.H23_1")) %>%
dplyr::select( -c("M.H15_1", "M.H24_1")) %>%
dplyr::select( -c("M.H22_1", "M.H31_1"))
#scoring
cols_reverse <- c("M.H6_1","M.H7_1","M.H12_1","M.H14_1","M.H29_1","M.H30_1",
"M.H32_1")
cols_caregiverbeliefs <- c("M.H1_1","M.H2_1","M.H3_1","M.H4_1")
cols_caregiversinging <- c("M.H9_1","M.H10_1","M.H12_1","M.H16_1")
cols_childhoodattitude <- c("M.H29_1","M.H30_1","M.H32_1")
cols_socialcontexts <- c("M.H21_1","M.H25_1","M.H26_1","M.H28_1")
cols_musicmaking <- c("M.H5_1","M.H6_1","M.H7_1","M.H8_1", "M.H14_1")
# Reverse code
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode,  min=1, max=7)
#scoring
scored_data$MH_total <- apply(MH,1, sum) # total BMRQ scores
scored_data$MH_caregiverbeliefs <- apply(MH[cols_caregiverbeliefs], 1,sum)
scored_data$MH_caregiversinging <- apply(MH[cols_caregiversinging],1, sum)
scored_data$MH_childhoodattitude <-apply(MH[cols_childhoodattitude],1, sum)
scored_data$MH_socialcontexts <- apply(MH[cols_socialcontexts],1, sum)
scored_data$MH_musicmaking <- apply(MH[cols_musicmaking],1, sum)
write.csv(scored_data, file='../../data/pleasing-displeasing_followup/scored_data.csv')
full <- merge(scored_data, master,by.x="Q158", by.y="ID")
#removing anyone missing ELA measures
full <- full[complete.cases(full[394:421]),]
library(tidyverse)
library(corrplot)
library(psych)
source("../reverseCode.R")
# R command to get corrplot2 from github
source("https://raw.githubusercontent.com/dorianps/corrplot2/master/corrplot2.R")
scored_data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
master <- read.csv(file="../../data/pleasing-displeasing_followup/pleasing_displeasing_scored.csv")
#names(scored_data)[20] <- "ID"
master <- master[-1]
names(master)[1] <- "ID"
#scoring
MH <- scored_data %>%
dplyr::select("M.H1_1":"M.H35_1")
MH <- MH[-c(32:34)] %>%
dplyr::select(-c("M.H17_1", "M.H20_1", "M.H18_1","M.H19_1","M.H13_1","M.H27_1","M.H23_1")) %>%
dplyr::select( -c("M.H15_1", "M.H24_1")) %>%
dplyr::select( -c("M.H22_1", "M.H31_1"))
#scoring
cols_reverse <- c("M.H6_1","M.H7_1","M.H12_1","M.H14_1","M.H29_1","M.H30_1",
"M.H32_1")
cols_caregiverbeliefs <- c("M.H1_1","M.H2_1","M.H3_1","M.H4_1")
cols_caregiversinging <- c("M.H9_1","M.H10_1","M.H12_1","M.H16_1")
cols_childhoodattitude <- c("M.H29_1","M.H30_1","M.H32_1")
cols_socialcontexts <- c("M.H21_1","M.H25_1","M.H26_1","M.H28_1")
cols_musicmaking <- c("M.H5_1","M.H6_1","M.H7_1","M.H8_1", "M.H14_1")
# Reverse code
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode,  min=1, max=7)
full <- merge(scored_data, master,by.x="Q158", by.y="ID")
setdiff(full$Q158, scored_data$Q158)
setdiff(scored_data$Q158,full$Q158)
View(master)
View(scored_data)
View(full)
full <- merge(scored_data, master, by.x="Q158", by.y="ID")
unique(master$ID)
library(tidyverse)
library(corrplot)
library(psych)
source("../reverseCode.R")
# R command to get corrplot2 from github
source("https://raw.githubusercontent.com/dorianps/corrplot2/master/corrplot2.R")
scored_data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
master <- read.csv(file="../../data/pleasing-displeasing_followup/pleasing_displeasing_scored.csv")
#names(scored_data)[20] <- "ID"
master <- master[-1]
names(master)[1] <- "ID"
#scoring
MH <- scored_data %>%
dplyr::select("M.H1_1":"M.H35_1")
MH <- MH[-c(32:34)] %>%
dplyr::select(-c("M.H17_1", "M.H20_1", "M.H18_1","M.H19_1","M.H13_1","M.H27_1","M.H23_1")) %>%
dplyr::select( -c("M.H15_1", "M.H24_1")) %>%
dplyr::select( -c("M.H22_1", "M.H31_1"))
#scoring
cols_reverse <- c("M.H6_1","M.H7_1","M.H12_1","M.H14_1","M.H29_1","M.H30_1",
"M.H32_1")
cols_caregiverbeliefs <- c("M.H1_1","M.H2_1","M.H3_1","M.H4_1")
cols_caregiversinging <- c("M.H9_1","M.H10_1","M.H12_1","M.H16_1")
cols_childhoodattitude <- c("M.H29_1","M.H30_1","M.H32_1")
cols_socialcontexts <- c("M.H21_1","M.H25_1","M.H26_1","M.H28_1")
cols_musicmaking <- c("M.H5_1","M.H6_1","M.H7_1","M.H8_1", "M.H14_1")
# Reverse code
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode,  min=1, max=7)
#scoring
scored_data$MH_total <- apply(MH,1, sum) # total BMRQ scores
scored_data$MH_caregiverbeliefs <- apply(MH[cols_caregiverbeliefs], 1,sum)
scored_data$MH_caregiversinging <- apply(MH[cols_caregiversinging],1, sum)
scored_data$MH_childhoodattitude <-apply(MH[cols_childhoodattitude],1, sum)
scored_data$MH_socialcontexts <- apply(MH[cols_socialcontexts],1, sum)
scored_data$MH_musicmaking <- apply(MH[cols_musicmaking],1, sum)
write.csv(scored_data, file='../../data/pleasing-displeasing_followup/scored_data.csv')
full <- merge(scored_data, master, by.x="Q158", by.y="ID")
setdiff(scored_data$Q158,full$Q158)
#removing anyone missing ELA measures
full <- full[complete.cases(full[394:421]),]
full <- merge(scored_data, master, by.x="Q158", by.y="ID")
#removing anyone missing ELA measures
full <- full[complete.cases(full[394:421]),]
full <- merge(scored_data, master, by.x="Q158", by.y="ID")
mean(full$What.is.your.age.)
sd(full$What.is.your.age.)
table(full$What.sex.were.you.assigned.at.birth.)
table(full$How.would.you.describe.yourself.currently.)
table(full$What.is.your.ethnicity..check.all.that.apply..)
library(tidyverse)
source("../reverseCode.R")
library(psych)
library(corrplot)
library(lavaan)
first <- read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
second <- read.csv(file='../../data/SLfollowupscored.csv')
keep <- setdiff(second$ID,first$Q158)
second <- second[second$ID %in% keep, ]
MH <- second %>%
dplyr::select("M.H_child1_1":"M.H_child20_1")
MH <- MH[complete.cases(MH),]
cols_reverse <- c("M.H_child6_1","M.H_child7_1","M.H_child11_1","M.H_child12_1","M.H_child18_1","M.H_child19_1","M.H_child20_1")
task_data <- read.csv(file='../data/final_pilot/pilot_task.csv')
survey_data <- read.csv(file="../data/final_pilot/survey_cleaned.csv")
stress_data <- read.csv(file='../data/final_pilot/stress_master.csv')
library(tidyverse)
library(lme4)
library(lmerTest)
library(AICcmodavg)
master<-merge(task_data,survey_data,by="Participant.Public.ID")
View(survey_data)
survey_data$Participant.Public.ID
library(tidyverse)
source("../reverseCode.R")
library(psych)
library(corrplot)
library(lavaan)
first <- read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
second <- read.csv(file='../../data/SLfollowupscored.csv')
keep <- setdiff(second$ID,first$Q158)
second <- second[second$ID %in% keep, ]
MH <- second %>%
dplyr::select("M.H_child1_1":"M.H_child20_1")
MH <- MH[complete.cases(MH),]
cols_reverse <- c("M.H_child6_1","M.H_child7_1","M.H_child11_1","M.H_child12_1","M.H_child18_1","M.H_child19_1","M.H_child20_1")
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode, min=1, max=7)
first <- read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
second <- read.csv(file='../../data/SLfollowupscored.csv')
model <- 'G =~ M.H_child10_1 + M.H_child1_1 + M.H_child2_1 + M.H_child3_1 + M.H_child4_1 + M.H_child9_1  + M.H_child11_1  + M.H_child13_1 + M.H_child18_1 + M.H_child19_1 + M.H_child20_1 + M.H_child14_1 + M.H_child15_1 + M.H_child16_1 + M.H_child17_1 + M.H_child5_1 + M.H_child6_1 + M.H_child7_1 + M.H_child8_1 + M.H_child12_1
caregiverbeliefs   =~ M.H_child2_1 + M.H_child1_1 +  + M.H_child3_1 + M.H_child4_1
caregiversinging =~ M.H_child10_1 + M.H_child9_1  + M.H_child11_1 + M.H_child13_1
childhoodattitude   =~ M.H_child20_1 + M.H_child19_1 + M.H_child18_1
socialcontexts  =~  M.H_child15_1 + M.H_child14_1 + M.H_child16_1 + M.H_child17_1
musicmaking =~ M.H_child7_1 + M.H_child5_1 + M.H_child6_1  + M.H_child8_1 + M.H_child12_1
## restrictions --> make sure factors are uncorrelated
G ~~ 0*caregiverbeliefs
G ~~ 0*caregiversinging
G ~~ 0*childhoodattitude
G ~~ 0*socialcontexts
G ~~ 0*musicmaking
caregiverbeliefs ~~ 0*caregiversinging
caregiverbeliefs ~~ 0*childhoodattitude
caregiverbeliefs ~~ 0*socialcontexts
caregiverbeliefs ~~ 0*musicmaking
caregiversinging ~~ 0*childhoodattitude
caregiversinging ~~ 0*socialcontexts
caregiversinging ~~ 0*musicmaking
childhoodattitude ~~ 0*socialcontexts
childhoodattitude ~~ 0*musicmaking
socialcontexts ~~ 0*musicmaking
#residual variances --> setting to 1
G ~~ 1*G
caregiverbeliefs ~~ 1*caregiverbeliefs
caregiversinging ~~ 1*caregiversinging
childhoodattitude ~~ 1*childhoodattitude
socialcontexts ~~ 1*socialcontexts
musicmaking ~~ 1*musicmaking'
fitG <- lavaan::cfa(model, data = MH,std.lv=TRUE)
lavaan::summary(fitG, fit.measures = T, standardized = T)
fitG <- lavaan::cfa(model, data = MH,std.lv=FALSE)
lavaan::summary(fitG, fit.measures = T, standardized = T)
fitG <- lavaan::cfa(model, data = MH,std.lv=TRUE)
lavaan::summary(fitG, fit.measures = T, standardized = T)
first <- read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
all <- read.csv(file='../../data/SLfollowupscored.csv')
keep <- setdiff(all$ID,first$Q158)
second <- all[second$all %in% keep, ]
MH <- all %>%
dplyr::select("M.H_child1_1":"M.H_child20_1")
MH <- MH[complete.cases(MH),]
cols_reverse <- c("M.H_child6_1","M.H_child7_1","M.H_child11_1","M.H_child12_1","M.H_child18_1","M.H_child19_1","M.H_child20_1")
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode, min=1, max=7)
#second = the df to use for CFA, as well as *replications* of construct validity stuff from sample 1
#all = the df to use for construct validity stuff that is new (MET, SRQ)
keep <- setdiff(all$ID,first$Q158)
second <- all[second$all %in% keep, ]
second <- all[all$ID %in% keep, ]
MH <- all %>%
dplyr::select("M.H_child1_1":"M.H_child20_1")
MH <- MH[complete.cases(MH),]
cols_reverse <- c("M.H_child6_1","M.H_child7_1","M.H_child11_1","M.H_child12_1","M.H_child18_1","M.H_child19_1","M.H_child20_1")
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode, min=1, max=7)
mean(second$What.is.your.age.)
sd(second$What.is.your.age.)
table(second$What.sex.were.you.assigned.at.birth.)
View(second)
table(second$How.would.you.describe.yourself.currently.)
table(second$What.is.your.ethnicity..check.all.that.apply..)
retest <- merge(second, first,by.x="ID",by.y="PROLIFIC_PID")
retest <- merge(all, first,by.x="ID",by.y="PROLIFIC_PID")
retest <- all[all$ID %notin% keep, ]
'%notin%' <- Negate('%in%')
retest <- all[all$ID %notin% keep, ]
mean(retest$What.is.your.age., na.rm = TRUE)
sd(retest$What.is.your.age., na.rm = TRUE)
table(retest$What.sex.were.you.assigned.at.birth.)
task_data <- read.csv(file='../data/final_pilot/pilot_task.csv')
survey_data <- read.csv(file="../data/final_pilot/survey_cleaned.csv")
stress_data <- read.csv(file='../data/final_pilot/stress_master.csv')
table(retest$How.would.you.describe.yourself.currently.)
View(retest)
