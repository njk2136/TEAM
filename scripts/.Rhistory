)
predictions<- predictSE(linmodel, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
View(newdata)
newdata <- expand.grid(
familiarity_scaled=seq(-1.8,1.2,0.01),
outcome_type=c("Original", Altered")
)
predictions<- predictSE(linmodel, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
plot_prefam <- cbind(newdata,predictions)
ggplot(data=plot_prefam, aes(x=pre_pres_order, y=fit)) +
geom_line()+
geom_ribbon(aes(ymin=fit+se.fit, ymax=fit-se.fit),alpha=0.1) +
theme_classic()+
ylab('Pre Familiarity Rating') +
xlab('Order of Presentation')
summary(linmodel)
#quadratic
quadmodel <- lmer(liking_scaled ~ familiarity_scaled*outcome_type + familiarityscaled_squared*outcome_type + (familiarity_scaled*outcome_type + familiarityscaled_squared*outcome_type|subject) + (1|clipnum), data=master, control=lmerControl(optimizer="bobyqa"))
newdata <- expand.grid(
familiarity_scaled=seq(-1.8,1.2,0.01),
outcome_type=c("Original", "Altered")
)
predictions<- predictSE(linmodel, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
plot_famlike <- cbind(newdata,predictions)
plot_famlike$rep <- plot_famlike$rep_scaled * attr(master$rep_scaled, 'scaled:scale') + attr(master$rep_scaled, 'scaled:center')
plot_famlike$rep <- plot_famlike$rep_scaled * attr(masterinteraction$rep_scaled, 'scaled:scale') + attr(masterinteraction$rep_scaled, 'scaled:center')
View(plot_famlike)
plot_famlike$familiarity <- plot_famlike$familiarity_scaled * attr(masterinteractionfam$familiarity_scaled, 'scaled:scale') + attr(masterinteractionfam$familiarity_scaled, 'scaled:center')
plot_famlike$liking <- plot_famlike$fit * attr(masterinteractionfam$liking_scaled, 'scaled:scale') + attr(masterinteractionfam$liking_scaled, 'scaled:center')
plot_famlike$liking <- plot_famlike$fit * attr(masterinteraction$liking_scaled, 'scaled:scale') + attr(masterinteraction$liking_scaled, 'scaled:center')
plot_famlike$upper <- (plot_famlike$fit + plot_famlike$se.fit) * attr(masterinteraction$liking_scaled, 'scaled:scale') + attr(masterinteraction$liking_scaled, 'scaled:center')
plot_famlike$lower <- (plot_famlike$fit - plot_famlike$se.fit) * attr(masterinteraction$liking_scaled, 'scaled:scale') + attr(masterinteraction$liking_scaled, 'scaled:center')
ggplot(data=plot_fam_like, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=fit-upper),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating')
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=fit-upper),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating')
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating')
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, color=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating')
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating')
prepreslike <- lmer(pre_like ~ pre_pres_order + (pre_pres_order|subject) + (1|clipnum), data=pre_analyses,control=lmerControl(optimizer="bobyqa"))
prefamlike <- lmer(pre_like ~ pre_fam + pre_pres_order + (pre_fam|subject) + (1|clipnum), data=pre_analyses,control=lmerControl(optimizer="bobyqa"))
prefamlike <- lmer(pre_like ~ pre_fam + pre_pres_order + (pre_fam + pre_pres_order|subject) + (1|clipnum), data=pre_analyses,control=lmerControl(optimizer="bobyqa"))
summary(prefamlike)
prefamlike <- lmer(pre_like ~ pre_fam + (pre_fam|subject) + (1|clipnum), data=pre_analyses,control=lmerControl(optimizer="bobyqa"))
prepreslike <- lmer(pre_like ~ pre_pres_order + (pre_pres_order|subject) + (1|clipnum), data=pre_analyses,control=lmerControl(optimizer="bobyqa"))
aov(prefamlike,prepreslike)
prefamlike <- lmer(pre_like ~ pre_fam + pre_pres_order + (pre_fam + pre_pres_order|subject) + (1|clipnum), data=pre_analyses,control=lmerControl(optimizer="bobyqa"))
summary(prefamlike)
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating') +
theme(title=element_text(family="Arial", size=24),
axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
) +
scale_color_manual(values=c("#56B4E9", "#E69F00")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00"))
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating') +
theme(title=element_text(family="Arial", size=24),
axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
) +
scale_color_manual(values=c("#56B4E9", "#E69F00")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
theme(legend.position = "none")
labels <- subset(plot_famlike, rep==median(plot_famlike$familiarity))
labels <- subset(plot_famlike, familiarity==median(plot_famlike$familiarity))
View(labels)
labels$label_placement <- ifelse(labels$outcome_type=="Original", labels$upper+0.85,labels$lower+0.5)
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating') +
theme(title=element_text(family="Arial", size=24),
axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
) +
scale_color_manual(values=c("#56B4E9", "#E69F00")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
theme(legend.position = "none") +
geom_label_repel(aes(label = outcome_type, y=label_placement, color=outcome_type),
na.rm = TRUE,
data=labels,
min.segment.length = Inf,
point.size = NA,
family="Arial",
size=8,
nudge_x = 6
)
labels$label_placement <- ifelse(labels$outcome_type=="Original", labels$upper+0.05,labels$lower-0.5)
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating') +
theme(title=element_text(family="Arial", size=24),
axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
) +
scale_color_manual(values=c("#56B4E9", "#E69F00")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
theme(legend.position = "none") +
geom_label_repel(aes(label = outcome_type, y=label_placement, color=outcome_type),
na.rm = TRUE,
data=labels,
min.segment.length = Inf,
point.size = NA,
family="Arial",
size=8,
nudge_x = 6
)
labels$label_placement <- ifelse(labels$outcome_type=="Original", labels$familiarity+0.05,labels$familiarity-0.05)
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating') +
theme(title=element_text(family="Arial", size=24),
axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
) +
scale_color_manual(values=c("#56B4E9", "#E69F00")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
theme(legend.position = "none") +
geom_label_repel(aes(label = outcome_type, y=label_placement, color=outcome_type),
na.rm = TRUE,
data=labels,
min.segment.length = Inf,
point.size = NA,
family="Arial",
size=8,
nudge_x = 6
)
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating') +
theme(title=element_text(family="Arial", size=24),
axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
) +
scale_color_manual(values=c("#56B4E9", "#E69F00")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
theme(legend.position = "none") +
geom_label_repel(aes(label = outcome_type, y=label_placement, color=outcome_type),
na.rm = TRUE,
data=labels,
min.segment.length = Inf,
point.size = NA,
family="Arial",
size=8
)
labels$label_placement <- ifelse(labels$outcome_type=="Original", labels$familiarity,labels$familiarity-0.25)
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating') +
theme(title=element_text(family="Arial", size=24),
axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
) +
scale_color_manual(values=c("#56B4E9", "#E69F00")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
theme(legend.position = "none") +
geom_label_repel(aes(label = outcome_type, y=label_placement, color=outcome_type),
na.rm = TRUE,
data=labels,
min.segment.length = Inf,
point.size = NA,
family="Arial",
size=8
)
labels$label_placement <- ifelse(labels$outcome_type=="Original", labels$familiarity-0.25,labels$familiarity-0.75)
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating') +
theme(title=element_text(family="Arial", size=24),
axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
) +
scale_color_manual(values=c("#56B4E9", "#E69F00")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
theme(legend.position = "none") +
geom_label_repel(aes(label = outcome_type, y=label_placement, color=outcome_type),
na.rm = TRUE,
data=labels,
min.segment.length = Inf,
point.size = NA,
family="Arial",
size=8
)
labels$label_placement <- ifelse(labels$outcome_type=="Original", labels$familiarity-0.1,labels$familiarity-0.5)
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating') +
theme(title=element_text(family="Arial", size=24),
axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
) +
scale_color_manual(values=c("#56B4E9", "#E69F00")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
theme(legend.position = "none") +
geom_label_repel(aes(label = outcome_type, y=label_placement, color=outcome_type),
na.rm = TRUE,
data=labels,
min.segment.length = Inf,
point.size = NA,
family="Arial",
size=8
)
post_famlike<-
ggplot(data=plot_famlike, aes(x=familiarity, y=liking)) +
geom_line(aes(color=outcome_type))+
geom_ribbon(aes(ymin=lower, ymax=upper, fill=outcome_type),alpha=0.1) +
theme_classic()+
ylab('Liking Rating') +
xlab('Familiarity Rating') +
theme(title=element_text(family="Arial", size=24),
axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
) +
scale_color_manual(values=c("#56B4E9", "#E69F00")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
theme(legend.position = "none") +
geom_label_repel(aes(label = outcome_type, y=label_placement, color=outcome_type),
na.rm = TRUE,
data=labels,
min.segment.length = Inf,
point.size = NA,
family="Arial",
size=8
)
ggsave('../figures/manuscript_figures/postfamlike.png', plot=post_famlike, dpi=350)
source("../../../../Downloads/reverseCode.R")
source("../../../../Downloads/reverseCode.R")
source("../../../../Downloads/reverseCode.R")
setwd("~/Documents/Research/TEAM/scripts")
#this will change depending on where this file is in relation to your working dir.
source("reverseCode.R")
View(reverseCode)
pilot <- read.csv(file="../data/pilot/pilot1.csv")
View(pilot)
survey <- read.csv(file="../data/pilot/pilot1.csv")
### UPDATE THIS TO GET CHILDHOOD VS. ADOLESCENT SCORES ###
QUIC <- survey %>%
select("I.had.a.set.morning.routine.on.school.days..i.e...I.usually.did..the.same.thing.each.day.to.get.ready..":"In.my.house.things.I.needed.were.often.misplaced.so.that.I..could.not.find.them.")
##this will load in basically all relevant packages. first, run install.packages("tidyverse") and then library(tidyverse)
library(tidyverse)
#this will change depending on where this file is in relation to your working dir.
source("reverseCode.R")
### UPDATE THIS TO GET CHILDHOOD VS. ADOLESCENT SCORES ###
QUIC <- survey %>%
select("I.had.a.set.morning.routine.on.school.days..i.e...I.usually.did..the.same.thing.each.day.to.get.ready..":"In.my.house.things.I.needed.were.often.misplaced.so.that.I..could.not.find.them.")
##this will load in basically all relevant packages. first, run install.packages("tidyverse") and then library(tidyverse)
library(tidyverse)
#this will change depending on where this file is in relation to your working dir.
source("reverseCode.R")
survey <- read.csv(file="../data/pilot/pilot1.csv")
View(survey)
#isolate survey you're scoring
STAI <- survey %>%
select("STAI1_1":"STAI20_1")
View(STAI)
reverse_score <- c("STAI18_1")
reverse_score <- c("STAI18_1")
reverse_score <- "STAI18_1"
survey$STAI_total <- apply(STAI,1, sum)
View(STAI)
View(survey)
View(survey)
View(STAI)
View(reverseCode)
library(tidyverse)
source("reverseCode.R")
survey <- read.csv(file="../data/pleasing-displeasing_followup/Displeasing)_October 18, 2022_14.03.csv")
View(survey)
#QUIC Scoring
QUIC <- survey %>%
select("QUIC_Child_2":"QUIC_Child_38")
#QUIC Scoring
QUIC_child <- survey %>%
select("QUIC_Child_2":"QUIC_Child_38")
#recode verbal responses (if not numbers)
QUIC[QUIC == "Yes"] <- as.numeric(1)
QUIC[QUIC == "No"] <- as.numeric(0)
#recode verbal responses (if not numbers)
QUIC_child[QUIC_child == "Yes"] <- as.numeric(1)
#recode verbal responses (if not numbers)
QUIC_child[QUIC_child == "Yes"] <- as.numeric(1)
QUIC_child[QUIC_child == "No"] <- as.numeric(0)
QUIC_child <- survey %>%
select("QUIC_Child_2":"QUIC_Child_38")
#recode verbal responses (if not numbers)
QUIC_child[QUIC_child == "Yes"] <- as.numeric(1)
QUIC_child[QUIC_child == "No"] <- as.numeric(0)
View(QUIC_child)
cols_reverse <- c("QUIC_Child_8", "QUIC_Child_15", "QUIC_Child_17", "QUIC_Child_36", )
cols_reverse <- c("QUIC_Child_8", "QUIC_Child_15", "QUIC_Child_17", "QUIC_Child_36")
cols_parentalpredictability <- c("QUIC_Child_2", "QUIC_Child_8","QUIC_Child_11", "QUIC_Child_12", "QUIC_Child_15","QUIC_Child_16", "QUIC_Child_17","QUIC_Child_31","QUIC_Child_32","QUIC_Child_33", "QUIC_Child_34","QUIC_Child_35")
cols_physiscalenvironment <- c("QUIC_Child_13", "QUIC_Child_20",  "QUIC_Child_26", "QUIC_Child_27", "QUIC_Child_36", "QUIC_Child_37", "QUIC_Child_38")
cols_safetyandsecurity <- c("QUIC_Child_23", "QUIC_Child_24", "QUIC_Child_25")
survey$QUIC_child_total <- apply(QUIC,1, sum)
#scoring
survey$QUIC_child_total <- apply(QUIC_child,1, sum)
View(QUIC_child)
#QUIC Scoring
QUIC_child <- survey %>%
select("QUIC_Child_2":"QUIC_Child_38")
#recode verbal responses (if not numbers)
QUIC_child[QUIC_child == "Yes"] <- as.numeric(1)
QUIC_child[QUIC_child == "No"] <- as.numeric(0)
QUIC[1:38] <- as.numeric(unlist(QUIC[1:38]))
QUIC_child[1:38] <- as.numeric(unlist(QUIC_child[1:38]))
QUIC_child[1:38] <- as.numeric(unlist(QUIC_child[1:38]))
QUIC_child[1:22] <- as.numeric(unlist(QUIC_child[1:22]))
cols_reverse <- c("QUIC_Child_8", "QUIC_Child_15", "QUIC_Child_17", "QUIC_Child_36")
cols_parentalpredictability <- c("QUIC_Child_2", "QUIC_Child_8","QUIC_Child_11", "QUIC_Child_12", "QUIC_Child_15","QUIC_Child_16", "QUIC_Child_17","QUIC_Child_31","QUIC_Child_32","QUIC_Child_33", "QUIC_Child_34","QUIC_Child_35")
cols_physiscalenvironment <- c("QUIC_Child_13", "QUIC_Child_20",  "QUIC_Child_26", "QUIC_Child_27", "QUIC_Child_36", "QUIC_Child_37", "QUIC_Child_38")
cols_safetyandsecurity <- c("QUIC_Child_23", "QUIC_Child_24", "QUIC_Child_25")
# Reverse code
QUIC_child[cols_reverse] <- lapply(QUIC_child[cols_reverse], reverseCode, min=0, max=1)
#scoring
survey$QUIC_child_total <- apply(QUIC_child,1, sum)
survey$QUIC_child_parentalpredictability <- apply(QUIC_child[cols_parentalpredictability], 1,sum)
survey$QUIC_child_physiscalenvironment <- apply(QUIC_child[cols_physiscalenvironment], 1,sum)
survey$QUIC_child_safetyandsecurity <- apply(QUIC_child[cols_safetyandsecurity], 1,sum)
hist(survey$QUIC_child_total)
QUIC_Adolescence <- survey %>%
select("QUIC_Adolescence_2":"QUIC_Adolescence_38")
#recode verbal responses (if not numbers)
QUIC_Adolescence[QUIC_Adolescence == "Yes"] <- as.numeric(1)
QUIC_Adolescence[QUIC_Adolescence == "No"] <- as.numeric(0)
QUIC_Adolescence[1:22] <- as.numeric(unlist(QUIC_Adolescence[1:22]))
cols_reverse <- c("QUIC_Adolescence_8", "QUIC_Adolescence_15", "QUIC_Adolescence_17", "QUIC_Adolescence_36")
cols_parentalpredictability <- c("QUIC_Adolescence_2", "QUIC_Adolescence_8","QUIC_Adolescence_11", "QUIC_Adolescence_12", "QUIC_Adolescence_15","QUIC_Adolescence_16", "QUIC_Adolescence_17","QUIC_Adolescence_31","QUIC_Adolescence_32","QUIC_Adolescence_33", "QUIC_Adolescence_34","QUIC_Adolescence_35")
cols_physiscalenvironment <- c("QUIC_Adolescence_13", "QUIC_Adolescence_20",  "QUIC_Adolescence_26", "QUIC_Adolescence_27", "QUIC_Adolescence_36", "QUIC_Adolescence_37", "QUIC_Adolescence_38")
cols_safetyandsecurity <- c("QUIC_Adolescence_23", "QUIC_Adolescence_24", "QUIC_Adolescence_25")
# Reverse code
QUIC_Adolescence[cols_reverse] <- lapply(QUIC_Adolescence[cols_reverse], reverseCode, min=0, max=1)
#scoring
survey$QUIC_Adolescence_total <- apply(QUIC_Adolescence,1, sum)
survey$QUIC_Adolescence_parentalpredictability <- apply(QUIC_Adolescence[cols_parentalpredictability], 1,sum)
survey$QUIC_Adolescence_physiscalenvironment <- apply(QUIC_Adolescence[cols_physiscalenvironment], 1,sum)
survey$QUIC_Adolescence_safetyandsecurity <- apply(QUIC_Adolescence[cols_safetyandsecurity], 1,sum)
hist(survey$QUIC_Adolescence_total)
cor.test(survey$QUIC_child_total, survey$QUIC_Adolescence_total)
ggplot(data=survey, aes(x=QUIC_child_total, y=QUIC_Adolescence_total)) +
geom_point()
#isolate survey you're scoring
STAI <- survey %>%
select("STAI1_1":"STAI20_1")
#if it is a simple subscore (i.e. no reverse coding or anything)
survey$STAI_total <- apply(STAI,1, sum)
ggplot(data=survey, aes(x=STAI_total, y=QUIC_Adolescence_total)) +
geom_point()
ggplot(data=survey, aes(x=STAI_total, y=QUIC_Child_total)) +
geom_point()
ggplot(data=survey, aes(x=STAI_total, y=QUIC_child_total)) +
geom_point()
cor.test(survey$QUIC_child_total, survey$STAI_total)
ggplot(data=survey, aes(x=QUIC_child_total, y=QUIC_Adolescence_total)) +
geom_point()
ggplot(data=survey, aes(x=QUIC_child_total, y=QUIC_Adolescence_total)) +
geom_point()
### CHILDHOOD ###
#QUIC Scoring
CHAOS_child <- survey %>%
select("CHAOS_Child_1_1":"QUIC_Child_6_1")
### CHILDHOOD ###
#QUIC Scoring
CHAOS_child <- survey %>%
select("CHAOS_Child_1_1":"CHAOS_Child_6_1")
### CHILDHOOD ###
#Deprivation Scoring
deprivation_child <- survey %>%
select("DT1c_1":"DT25c_1")
View(CHAOS_child)
CHAOS_child <- survey %>%
select("CHAOS_Child_1_1":"CHAOS_Child_6_1")
cols_reverse <- c("CHAOS_Child_1_1", "CHAOS_Child_5_1", "CHAOS_Child_6_1")
# Reverse code
CHAOS_child[cols_reverse] <- lapply(CHAOS_child[cols_reverse], reverseCode, min=1, max=5)
survey$CHAOS_child_total <- apply(CHAOS_child,1, sum)
hist(survey$CHAOS_child_total)
#CHAOS Scoring
CHAOS_Adolescence <- survey %>%
select("CHAOS_Adolescence_1_1":"CHAOS_Adolescence_6_1")
cols_reverse <- c("CHAOS_Adolescence_1_1", "CHAOS_Adolescence_5_1", "CHAOS_Adolescence_6_1")
# Reverse code
CHAOS_Adolescence[cols_reverse] <- lapply(CHAOS_Adolescence[cols_reverse], reverseCode, min=1, max=5)
survey$CHAOS_Adolescence_total <- apply(CHAOS_Adolescence,1, sum)
hist(survey$CHAOS_Adolescence_total)
cor.test(survey$CHAOS_child_total, survey$CHAOS_Adolescence_total)
ggplot(data=survey, aes(x=CHAOS_child_total, y=CHAOS_Adolescence_total)) + geom_point()
### CHILDHOOD ###
#Deprivation Scoring
deprivation_child <- survey %>%
select("DT1c_1":"DT25c_1")
cols_reverse <- c("DT1c_1", "DT1c_2", "DT1c_3", "DT1c_4", "DT1c_5", "DT1c_6", "DT1c_7", "DT1c_10")
cols_emotionaldeprivation <- c("DT1c_1", "DT1c_2", "DT1c_3", "DT1c_4", "DT1c_5", "DT1c_6", "DT1c_7")
cols_physicaldeprivation <- c("DT1c_10", "DT1c_11", "DT1c_12", "DT1c_13", "DT1c_14", "DT1c_15", "DT1c_16", "DT1c_17")
cols_cognitivedeprivation <- c("DT1c_18", "DT1c_19", "DT1c_20", "DT1c_21", "DT1c_22", "DT1c_23", "DT1c_24", "DT1c_25")
# Reverse code
deprivation_child[cols_reverse] <- lapply(deprivation_child[cols_reverse], reverseCode, min=1, max=4)
deprivation_child <- survey %>%
select("DT1c_1":"DT25c_1")
cols_reverse <- c("DT1c_1", "DT2c_1", "DT3c_1", "DT4c_1", "DT5c_1", "DT6c_1", "DT7c_1", "DT10c_1")
cols_emotionaldeprivation <- c("DT1c_1", "DT2c_1", "DT3c_1", "DT4c_1", "DT5c_1", "DT6c_1", "DT7c_1")
cols_physicaldeprivation <- c("DT10c_1", "DT11c_1", "DT12c_1", "DT13c_1", "DT14c_1", "DT15c_1", "DT16c_1", "DT17c_1")
cols_cognitivedeprivation <- c("DT18c_1", "DT19c_1", "DT20c_1", "DT21c_1", "DT22c_1", "DT23c_1", "DT24c_1", "DT25c_1")
# Reverse code
deprivation_child[cols_reverse] <- lapply(deprivation_child[cols_reverse], reverseCode, min=1, max=4)
#scoring
survey$deprivation_child_total <- apply(deprivation_child,1, sum)
survey$deprivation_child_emotional <- apply(deprivation_child[cols_emotionaldeprivation], 1,sum)
survey$deprivation_child_physical <- apply(deprivation_child[cols_physicaldeprivation], 1,sum)
survey$deprivation_child_cognitive <- apply(deprivation_child[cols_cognitivedeprivation], 1,sum)
hist(survey$QUIC_Adolescence_total)
hist(survey$deprivation_child_total)
deprivation_Adolescence <- survey %>%
select("DT1a_1":"DT25a_1")
cols_reverse <- c("DT1a_1", "DT2a_1", "DT3a_1", "DT4a_1", "DT5a_1", "DT6a_1", "DT7a_1", "DT10a_1")
cols_emotionaldeprivation <- c("DT1a_1", "DT2a_1", "DT3a_1", "DT4a_1", "DT5a_1", "DT6a_1", "DT7a_1")
cols_physicaldeprivation <- c("DT10a_1", "DT11a_1", "DT12a_1", "DT13a_1", "DT14a_1", "DT15a_1", "DT16a_1", "DT17a_1")
cols_cognitivedeprivation <- c("DT18a_1", "DT19a_1", "DT20a_1", "DT21a_1", "DT22a_1", "DT23a_1", "DT24a_1", "DT25a_1")
# Reverse code
deprivation_Adolescence[cols_reverse] <- lapply(deprivation_Adolescence[cols_reverse], reverseCode, min=1, max=4)
#scoring
survey$deprivation_Adolescence_total <- apply(deprivation_Adolescence,1, sum)
survey$deprivation_Adolescence_emotional <- apply(deprivation_Adolescence[cols_emotionaldeprivation], 1,sum)
survey$deprivation_Adolescence_physical <- apply(deprivation_Adolescence[cols_physicaldeprivation], 1,sum)
survey$deprivation_Adolescence_cognitive <- apply(deprivation_Adolescence[cols_cognitivedeprivation], 1,sum)
hist(survey$deprivation_Adolescence_total)
cor.test(survey$deprivation_child_total, survey$deprivation_Adolescence_total)
cor.test(survey$deprivation_child_total, survey$QUIC_child_total)
cor.test(survey$deprivation_child_total, survey$CHAOS_child_total)
#scoring
survey$deprivation_Adolescence_total <- apply(deprivation_Adolescence,1, sum)
survey$deprivation_Adolescence_emotional <- apply(deprivation_Adolescence[cols_emotionaldeprivation], 1,sum)
survey$deprivation_Adolescence_physical <- apply(deprivation_Adolescence[cols_physicaldeprivation], 1,sum)
survey$deprivation_Adolescence_cognitive <- apply(deprivation_Adolescence[cols_cognitivedeprivation], 1,sum)
hist(survey$deprivation_Adolescence_total)
cor.test(survey$deprivation_child_total, survey$CHAOS_child_total)
cor.test(survey$deprivation_child_total, survey$CHAOS_child_total)
