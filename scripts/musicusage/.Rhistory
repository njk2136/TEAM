cbind(followup[2]) %>%
pivot_longer(!id, names_to = "stim", values_to = "rating")
x=1:nrow(pleasantness)
for (i in x) {
pleasantness$stim[i] <- gsub("_dgpleasantness_1", "",pleasantness$stim[i])
}
pleasantness_master <- merge(dg_conditions, pleasantness)
pleasantnessdispleasing_master <- subset(pleasantness_master, condition=="displeasing")
pleasantnessdispleasing_master <- merge(pleasantnessdispleasing_master, followup)
m1 <- lmer(data=pleasantnessdispleasing_master, rating ~ QUIC_child_total + CHAOS_child_shortform + deprivation_child_total + Threat_childhood_total + (1|id))
m1 <- lmer(data=pleasantnessdispleasing_master, rating ~ QUIC_child_total + CHAOS_child_shortform + deprivation_child_total + threat_childhood_total + (1|id))
summary(m1)
m1 <- lmer(data=pleasantnessdispleasing_master, rating ~ QUIC_child_total + CHAOS_child_shortform + deprivation_child_total + threat_childhood_total + PASS_total + (1|id))
m1 <- lmer(data=pleasantnessdispleasing_master, rating ~ QUIC_child_total + CHAOS_child_shortform + deprivation_child_total + threat_childhood_total + PAS_total + (1|id))
m1 <- lmer(data=pleasantnessdispleasing_master, rating ~ QUIC_child_total + CHAOS_child_shortform + deprivation_child_total + threat_childhood_total + STAI_total + (1|id))
summary(m1)
m1 <-lm(data=followup, AIMS_current_total ~ QUIC_sum + CHAOS_sum + deprivation_sum + Threat_sum)
summary(m1)
m2 <-lm(data=followup, AIMS_current_total ~ QUIC_sum + CHAOS_sum + deprivation_sum + Threat_sum + positive_escapism_current)
summary(m2)
m3 <-lm(data=followup, AIMS_current_total ~ QUIC_sum + CHAOS_sum + deprivation_sum + Threat_sum + negative_escapism_current)
summary(m3)
m2 <-lm(data=followup, negative_escapism_current ~ QUIC_sum + CHAOS_sum + deprivation_sum + Threat_sum )
summary(m2)
m2 <-lm(data=followup, positive_escapism_current ~ QUIC_sum + CHAOS_sum + deprivation_sum + Threat_sum )
summary(m2)
cor.test(followup$AIMS_current_total, followup$QUIC_child_total)
cor.test(followup$AIMS_current_total, followup$deprivation_child_total)
cor.test(followup$AIMS_current_total, followup$threat_childhood_total)
cor.test(followup$AIMS_current_total, followup$CD.RISC_total)
names(liking)[2] <- "id"
SL_master <- merge(liking, followup, by="id")
x=1:nrow(SL_master)
for (i in x) {
if (SL_master$rep[i]<3) {
SL_master$rep_category[i]="low"
} else if (SL_master$rep[i]<9) {
SL_master$rep_category[i]="medium"
} else if (SL_master$rep[i]>8) {
SL_master$rep_category[i]="high"
}
}
SL_master$rep_category <- as.factor(SL_master$rep_category)
SL_master <- within(SL_master, rep_category <- relevel(rep_category, ref = "medium"))
m1 <- lmer(data=SL_master, liking ~ rep_category*outcome_type*QUIC_sum + deprivation_sum + Threat_sum +CHAOS_sum +
(1|id) + (1|clipnum))
anova(m1)
summary(m1)
m1 <- lmer(data=SL_master, liking ~ QUIC_sum + deprivation_sum + Threat_sum + rep_category*CHAOS_sum*outcome_type +
(1|id) + (1|clipnum))
m1 <- lmer(data=SL_master, liking ~ QUIC_sum + deprivation_sum + Threat_sum + rep_category*CHAOS_sum*outcome_type +
(1|id) + (1|clipnum))
anova(m1)
summary(m1)
m1 <- lmer(data=SL_master, liking ~ QUIC_sum + deprivation_sum + rep_category*Threat_sum*outcome_type + CHAOS_sum +
(1|id) + (1|clipnum))
anova(m1)
summary(m1)
groove_stiminfo$stim <- as.character(groove_stiminfo$stim)
groove<- followup %>%
dplyr::select("X1_move_1":"X39_pleasure_1")
move_index <- seq(1,30,by=2)
pleasure_index <- seq(2,30, by=2)
move <- groove[move_index] %>%
cbind(followup[2]) %>%
pivot_longer(!id, names_to = "stim", values_to = "rating")
x=1:nrow(move)
for (i in x) {
move$stim[i] <- gsub("_move_1", "",move$stim[i])
move$stim[i] <- gsub("X", "",move$stim[i])
}
move <- merge(move, groove_stiminfo)
move$tert <- as.factor(move$tert)
##double check that for the contrasts, the weights are -1,2,-1 to low,intermediate, and high respectively
move <- within(move, tert <- relevel(tert, ref = "Low"))
m1 <- lmer(data=move, rating ~ tert + (tert|id) + (1|stim))
summary(m1)
m.emm <- emmeans(m1, "tert",lmer.df = "satterthwaite",lmerTest.limit = 3435)
m.emm <- emmeans(m1, "tert",lmer.df = "satterthwaite",lmerTest.limit = 4020)
contrast(m.emm, 'poly') %>%
broom::tidy() %>%
head(3)
##double check that for the contrasts, the weights are -1,2,-1 to low,intermediate, and high respectively
move <- within(move, tert <- relevel(tert, ref = "Intermediate"))
m1 <- lmer(data=move, rating ~ tert + (tert|id) + (1|stim))
summary(m1)
m.emm <- emmeans(m1, "tert",lmer.df = "satterthwaite",lmerTest.limit = 4020)
contrast(m.emm, 'poly') %>%
broom::tidy() %>%
head(3)
##double check that for the contrasts, the weights are -1,2,-1 to low,intermediate, and high respectively
move <- within(move, tert <- relevel(tert, ref = "Low"))
m1 <- lmer(data=move, rating ~ tert + (tert|id) + (1|stim))
m1 <- lmer(data=move, rating ~ tert + (1|id) + (1|stim))
summary(m1)
m.emm <- emmeans(m1, "tert",lmer.df = "satterthwaite",lmerTest.limit = 4020)
contrast(m.emm, 'poly') %>%
broom::tidy() %>%
head(3)
#check w/ perceived complexity ratings
m1 <- lmer(data=pleasure, rating ~ PerceivedComplexity + (PerceivedComplexity|id) + (1|stim))
#check w/ perceived complexity ratings
m1 <- lmer(data=move, rating ~ PerceivedComplexity + (PerceivedComplexity|id) + (1|stim))
summary(m1)
m2 <- lmer(data=move, rating ~ poly(PerceivedComplexity,2,raw=TRUE) + (poly(PerceivedComplexity,2,raw=TRUE)|id) + (1|stim))
m2 <- lmer(data=move, rating ~ poly(PerceivedComplexity,2,raw=TRUE) + (poly(PerceivedComplexity,2,raw=TRUE)|id) + (1|stim))
summary(m2)
anova(m1,m2)
pleasure <- groove[pleasure_index] %>%
cbind(followup[2]) %>%
pivot_longer(!id, names_to = "stim", values_to = "rating")
x=1:nrow(pleasure)
for (i in x) {
pleasure$stim[i] <- gsub("_pleasure_1", "",pleasure$stim[i])
pleasure$stim[i] <- gsub("X", "",pleasure$stim[i])
}
pleasure <- merge(pleasure, groove_stiminfo)
pleasure$tert <- as.factor(pleasure$tert)
pleasure <- within(pleasure, tert <- relevel(tert, ref = "Low"))
m1 <- lmer(data=pleasure, rating ~ tert + (tert|id) + (1|stim))
summary(m1)
m.emm <- emmeans(m1, "tert",lmer.df = "satterthwaite",lmerTest.limit = 3435)
m.emm <- emmeans(m1, "tert",lmer.df = "satterthwaite",lmerTest.limit = 4020)
contrast(m.emm, 'poly') %>%
broom::tidy() %>%
head(3)
#check w/ perceived complexity ratings
m1 <- lmer(data=pleasure, rating ~ PerceivedComplexity + (PerceivedComplexity|id) + (1|stim))
summary(m1)
m2 <- lmer(data=pleasure, rating ~ poly(PerceivedComplexity,2,raw=TRUE) + (poly(PerceivedComplexity,2,raw=TRUE)|id) + (1|stim))
summary(m2)
anova(m1,m2)
move_master <- merge(move, followup, by="id")
m1 <- lmer(data=move_master, rating ~ QUIC_sum*tert + Threat_sum + deprivation_sum + CHAOS_sum + (tert|id) + (1|stim))
summary(m1)
performance::check_collinearity(m1)
m1 <- lmer(data=move_master, rating ~ QUIC_sum + Threat_sum + deprivation_sum + CHAOS_sum*tert+ (tert|id) + (1|stim))
summary(m1)
performance::check_collinearity(m1)
pleasure_master <- merge(pleasure, followup, by="id")
m1 <- lmer(data=pleasure_master, rating ~ QUIC_sum*tert + Threat_sum + deprivation_sum + CHAOS_sum + (tert|id) + (1|stim))
m1 <- lmer(data=pleasure_master, rating ~ QUIC_sum*tert + Threat_sum + deprivation_sum + CHAOS_sum + (tert|id) + (1|stim))
summary(m1)
performance::check_collinearity(m1)
m1 <- lmer(data=pleasure_master, rating ~ QUIC_sum + Threat_sum + deprivation_sum + CHAOS_sum*tert+ (tert|id) + (1|stim))
summary(m1)
performance::check_collinearity(m1)
library(tidyverse)
library(lme4)
library(lmerTest)
library(emmeans)
library(mediation)
library(corrplot)
library(psych)
library(sjPlot)
followup_scored <- read.csv(file='../../data/SLfollowupscored.csv')
liking <- read.csv(file='../../data/SL_followup/masterinteractionliking.csv')
groove_stiminfo <- read.csv(file="../../stimuli/senn_stim/stim_information.csv")
names(groove_stiminfo)[2] <- "stim"
cor.test(followup_scored$QUIC_sum, followup_scored$AIMS_current_total)
library(boot)
library(mediate)
library(mediation)
m1 <-lm(data=followup_scored, scale(STAI_total) ~ scale(CHAOS_sum) + scale(deprivation_sum) + scale(Threat_sum))
m2 <-lm(data=followup_scored, scale(STAI_total) ~  scale(CHAOS_sum) + scale(deprivation_sum) + scale(Threat_sum) + scale(AIMS_current_total))
mediation::mediate(m1,m2,boot=TRUE,treat = STAI_total, mediator = AIMS_current_total)
mediation::mediate(m1,m2,boot=TRUE,treat = scale(STAI_total), mediator = AIMS_current_total)
mediation::mediate(m1,m2,boot=TRUE,treat = "STAI_total", mediator = "AIMS_current_total")
mediation::mediate(m1,m2,boot=TRUE, treat = "STAI_total", mediator = "AIMS_current_total")
m1 <-lm(data=followup_scored, scale(STAI_total) ~ scale(CHAOS_sum) + scale(deprivation_sum) + scale(Threat_sum))
m2 <-lm(data=followup_scored, scale(STAI_total) ~  scale(CHAOS_sum) + scale(deprivation_sum) + scale(Threat_sum) + scale(AIMS_current_total))
mediation::mediate(m1,m2,boot=TRUE, treat = "STAI_total", mediator = "AIMS_current_total")
mediation::mediate(m1,m2,boot=TRUE, treat = "scale(STAI_total)", mediator = "scale(AIMS_current_total)")
summary(m1)
summary(m2)
m1 <-lm(data=followup_scored, scale(STAI_total) ~ scale(CHAOS_sum))
m2 <-lm(data=followup_scored, scale(STAI_total) ~  scale(CHAOS_sum) + scale(AIMS_current_total))
mediation::mediate(m1,m2,boot=TRUE, treat = "STAI_total", mediator = "AIMS_current_total")
mediation::mediate(m1,m2,boot=TRUE, treat = "CHAOS_sum", mediator = "AIMS_current_total")
m1 <-lm(data=followup_scored, STAI_total ~ CHAOS_sum)
m2 <-lm(data=followup_scored, STAI_total ~  CHAOS_sum + AIMS_current_total)
mediation::mediate(m1,m2, boot=TRUE, treat = "CHAOS_sum", mediator = "AIMS_current_total")
mediate <- mediation::mediate(m1,m2, boot=TRUE, treat = "CHAOS_sum", mediator = "AIMS_current_total")
summary(mediate)
m1 <-lm(data=followup_scored, STAI_total ~ Threat_sum)
m2 <-lm(data=followup_scored, STAI_total ~  Threat_sum + AIMS_current_total)
mediate <- mediation::mediate(m1,m2, boot=TRUE, treat = "Threat_sum", mediator = "AIMS_current_total")
summary(mediate)
m1 <-lm(data=followup_scored, STAI_total ~ deprivation_sum)
m2 <-lm(data=followup_scored, STAI_total ~  deprivation_sum + AIMS_current_total)
mediate <- mediation::mediate(m1,m2, boot=TRUE, treat = "deprivation_sum", mediator = "AIMS_current_total")
summary(mediate)
m1 <-lm(data=followup_scored, CD.RISC_total ~ deprivation_sum)
m2 <-lm(data=followup_scored, CD.RISC_total ~  deprivation_sum + AIMS_current_total)
mediate <- mediation::mediate(m1,m2, boot=TRUE, treat = "deprivation_sum", mediator = "CD.RISC_total")
summary(mediate)
summary(m2)
mediate <- mediation::mediate(m1,m2, boot=TRUE, treat = "deprivation_sum", mediator = "AIMS_current_total")
summary(mediate)
m1 <-lm(data=followup_scored, CD.RISC_total ~ Threat_sum)
m2 <-lm(data=followup_scored, CD.RISC_total ~  Threat_sum + AIMS_current_total)
mediate <- mediation::mediate(m1,m2, boot=TRUE, treat = "Threat_sum", mediator = "AIMS_current_total")
summary(mediate)
summary(m1)
cor.test(followup_scored$Threat_sum, followup_scored$AIMS_current_total)
m1 <-lm(data=followup_scored, CD.RISC_total ~ CHAOS_sum)
m2 <-lm(data=followup_scored, CD.RISC_total ~  CHAOS_sum + AIMS_current_total)
mediate <- mediation::mediate(m1,m2, boot=TRUE, treat = "Threat_sum", mediator = "AIMS_current_total")
mediate <- mediation::mediate(m1,m2, boot=TRUE, treat = "Threat_sum", mediator = "CHAOS_sum")
mediate <- mediation::mediate(m1,m2, boot=TRUE, treat = "CHAOS_sum", mediator = "AIMS_current_total")
summary(mediate)
m1 <-lm(data=followup_scored, CD.RISC_total ~ AIMS_current_total)
summary(m1)
m1 <-lm(data=followup_scored, CD.RISC_total ~ AIMS_current_total + CHAOS_sum)
summary(m1)
cor.test(followup_scored$deprivation_total, followup_scored$AIMS_current_total)
cor.test(followup_scored$deprivation_sum, followup_scored$AIMS_current_total)
mediate <- mediation::mediate(m1,m2, boot=TRUE, treat = "CHAOS_sum", mediator = "AIMS_current_total")
summary(mediate)
m1 <-lm(data=followup_scored, CD.RISC_total ~ deprivation_total)
m1 <-lm(data=followup_scored, CD.RISC_total ~ deprivation_sum)
summary(m1)
m1 <-lm(data=followup_scored, CD.RISC_total ~ AIMS_current_total)
summary(m1)
m1 <-lm(data=followup_scored, deprivation_sum ~ AIMS_current_total)
summary(m1)
library(tidyverse)
library(lme4)
library(lmerTest)
library(emmeans)
library(mediation)
library(corrplot)
library(psych)
library(sjPlot)
library(mediation)
first <- read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
followup_scored <- read.csv(file='../../data/SLfollowupscored.csv')
keep <- setdiff(followup_scored$ID,first$Q158)
followup_scored <- followup_scored[followup_scored$ID %in% keep, ]
liking <- read.csv(file='../../data/SL_followup/masterinteractionliking.csv')
groove_stiminfo <- read.csv(file="../../stimuli/senn_stim/stim_information.csv")
names(groove_stiminfo)[2] <- "stim"
first <- read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
followup_scored <- read.csv(file='../../data/SLfollowupscored.csv')
#keep <- setdiff(followup_scored$ID,first$Q158)
#followup_scored <- followup_scored[followup_scored$ID %in% keep, ]
liking <- read.csv(file='../../data/SL_followup/masterinteractionliking.csv')
groove_stiminfo <- read.csv(file="../../stimuli/senn_stim/stim_information.csv")
names(groove_stiminfo)[2] <- "stim"
cor.test(followup_scored$CD.RISC_total, followup_scored$AIMS_current_total)
cor.test(followup_scored$STAI_total, followup_scored$AIMS_current_total)
cor.test(followup_scored$PASS_total, followup_scored$AIMS_current_total)
library(tidyverse)
ACE_df <- read.csv(file='../comp_modeling/practice_data/ACE_trial_data.csv')
# Finding the average mean leave per participant in each environment
# Get the mean of last two exploits
ACE_df <- mutate(ACE_df, Lag1=lag(Apple_return))
ACE_df <- mutate(ACE_df, Lag2=lag(Apple_return, n=2))
ACE_df$Lag1 <- as.numeric(ACE_df$Lag1)
ACE_df$Lag2 <- as.numeric(ACE_df$Lag2)
# Creating a df with means of each leave decision
ACE_df2 <- ACE_df %>%
rowwise() %>%
mutate(Leave_val=mean(c(Lag1,Lag2), na.rm=TRUE))
ACE_df2 <- ACE_df2 %>%
filter(Response == "L")
ACE_df2 <- ungroup(ACE_df2)
# Finding the average mean leave per participant in each environment
Mean_leave <- ACE_df2 %>%
group_by(subject, Environment) %>%
summarise(leave = mean(Leave_val))
Mean_leave_short <- spread(Mean_leave, Environment, leave)
# Calcualting the mean deviation from the optimal leaving threshold - see https://osf.io/nu627/ for simulation code (Lloyd, McKay, Sebastian & Balsters, 2020, Dev Sci)
Mean_deviation <- Mean_leave %>%
mutate(deviate = case_when(
Environment == 2 ~ 5.07 - leave,
Environment == 1 ~ 7.04 - leave
)
)
Mean_deviation <- select(Mean_deviation, "subject", "Environment", "deviate")
Mean_deviation_short <- spread(Mean_deviation, Environment, deviate)
means_all <- left_join(Mean_leave_short, Mean_deviation_short, by = "subject")
# Link up the subject number to the participants' ID and create df
public_id <- ACE_df %>%
select(`Participant.ID`, subject)
public_id <- unique(public_id)
colnames(public_id) <- c("Participant.ID", "subject")
means_all <- left_join(means_all, public_id, by = "subject")
##not sure where the "ACE_dataset" variable comes from? using means_all as a replacement for now
#ACE_dataset <- left_join(ACE_dataset, means_all, by = "Participant.ID")
# Make grouping variable where 4 or more ACEs means the participant is assigned to the 'high ACE' group
means_all <- means_all %>%
mutate(ACE_group = case_when(
ACE_Score > 3 ~ 1,
ACE_Score < 4 ~ 0
)
)
library(tidyverse)
library(corrplot)
library(corrplot)
source("../reverseCode.R")
scored_data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
master <- read.csv(file="../../data/pleasing-displeasing_followup/pleasing_displeasing_scored.csv")
names(scored_data)[20] <- "ID"
master <- master[-1]
names(master)[1] <- "ID"
#scoring
MH <- scored_data %>%
dplyr::select("M.H1_1":"M.H35_1")
MH <- MH[-c(32:34)] %>%
dplyr::select(-c("M.H17_1", "M.H20_1", "M.H18_1","M.H19_1","M.H13_1","M.H27_1","M.H23_1")) %>%
dplyr::select( -c("M.H15_1", "M.H24_1")) %>%
dplyr::select( -c("M.H22_1", "M.H31_1"))
#scoring
cols_reverse <- c("M.H6_1","M.H7_1","M.H12_1","M.H14_1","M.H29_1","M.H30_1",
"M.H32_1")
cols_caregiverbeliefs <- c("M.H1_1","M.H2_1","M.H3_1","M.H4_1")
cols_caregiversinging <- c("M.H9_1","M.H10_1","M.H12_1","M.H16_1")
cols_childhoodattitude <- c("M.H29_1","M.H30_1","M.H32_1")
cols_socialcontexts <- c("M.H21_1","M.H25_1","M.H26_1","M.H28_1")
cols_musicmaking <- c("M.H5_1","M.H6_1","M.H7_1","M.H8_1", "M.H14_1")
# Reverse code
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode,  min=1, max=7)
#scoring
scored_data$MH_total <- apply(MH,1, sum) # total BMRQ scores
scored_data$MH_caregiverbeliefs <- apply(MH[cols_caregiverbeliefs], 1,sum)
scored_data$MH_caregiversinging <- apply(MH[cols_caregiversinging],1, sum)
scored_data$MH_childhoodattitude <-apply(MH[cols_childhoodattitude],1, sum)
scored_data$MH_socialcontexts <- apply(MH[cols_socialcontexts],1, sum)
scored_data$MH_musicmaking <- apply(MH[cols_musicmaking],1, sum)
write.csv(scored_data, file='../../data/pleasing-displeasing_followup/scored_data.csv')
full <- merge(scored_data, master,by.x="ID", by.y="ID")
View(scored_data)
scored_data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
master <- read.csv(file="../../data/pleasing-displeasing_followup/pleasing_displeasing_scored.csv")
#names(scored_data)[20] <- "ID"
master <- master[-1]
names(master)[1] <- "ID"
#scoring
MH <- scored_data %>%
dplyr::select("M.H1_1":"M.H35_1")
MH <- MH[-c(32:34)] %>%
dplyr::select(-c("M.H17_1", "M.H20_1", "M.H18_1","M.H19_1","M.H13_1","M.H27_1","M.H23_1")) %>%
dplyr::select( -c("M.H15_1", "M.H24_1")) %>%
dplyr::select( -c("M.H22_1", "M.H31_1"))
#scoring
cols_reverse <- c("M.H6_1","M.H7_1","M.H12_1","M.H14_1","M.H29_1","M.H30_1",
"M.H32_1")
cols_caregiverbeliefs <- c("M.H1_1","M.H2_1","M.H3_1","M.H4_1")
cols_caregiversinging <- c("M.H9_1","M.H10_1","M.H12_1","M.H16_1")
cols_childhoodattitude <- c("M.H29_1","M.H30_1","M.H32_1")
cols_socialcontexts <- c("M.H21_1","M.H25_1","M.H26_1","M.H28_1")
cols_musicmaking <- c("M.H5_1","M.H6_1","M.H7_1","M.H8_1", "M.H14_1")
# Reverse code
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode,  min=1, max=7)
#scoring
scored_data$MH_total <- apply(MH,1, sum) # total BMRQ scores
scored_data$MH_caregiverbeliefs <- apply(MH[cols_caregiverbeliefs], 1,sum)
scored_data$MH_caregiversinging <- apply(MH[cols_caregiversinging],1, sum)
scored_data$MH_childhoodattitude <-apply(MH[cols_childhoodattitude],1, sum)
scored_data$MH_socialcontexts <- apply(MH[cols_socialcontexts],1, sum)
scored_data$MH_musicmaking <- apply(MH[cols_musicmaking],1, sum)
write.csv(scored_data, file='../../data/pleasing-displeasing_followup/scored_data.csv')
full <- merge(scored_data, master,by.x="ID", by.y="ID")
#removing anyone missing ELA measures
full <- full[complete.cases(full[391:418]),]
variables = dplyr::select(full,
MH_total, MH_caregiverbeliefs, MH_caregiversinging, MH_childhoodattitude, MH_socialcontexts, MH_musicmaking,
Gold_activeengagement, Gold_perceptualabilities, Gold_musicaltraining, Gold_singingabilities,
Gold_emotion, Gold_musicalsophistication,BMRQ_total, BMRQ_moodreg, BMRQ_emotion, BMRQ_socialreward,
BMRQ_absorption, BMRQ_musicseek, BMRQ_sensorimotor,QUIC_child_total,
CHAOS_child_total, deprivation_child_total, threat_childhood_total)
output = corr.test(variables)
library(tidyverse)
library(corrplot)
library(corrplot)
source("../reverseCode.R")
library(psych)
variables = dplyr::select(full,
MH_total, MH_caregiverbeliefs, MH_caregiversinging, MH_childhoodattitude, MH_socialcontexts, MH_musicmaking,
Gold_activeengagement, Gold_perceptualabilities, Gold_musicaltraining, Gold_singingabilities,
Gold_emotion, Gold_musicalsophistication,BMRQ_total, BMRQ_moodreg, BMRQ_emotion, BMRQ_socialreward,
BMRQ_absorption, BMRQ_musicseek, BMRQ_sensorimotor,QUIC_child_total,
CHAOS_child_total, deprivation_child_total, threat_childhood_total)
output = corr.test(variables)
#M@HR + GoldMSI
variables = dplyr::select(full,
MH_total, MH_caregiverbeliefs, MH_caregiversinging, MH_childhoodattitude, MH_socialcontexts, MH_musicmaking,
Gold_activeengagement, Gold_perceptualabilities, Gold_musicaltraining, Gold_singingabilities,
Gold_emotion, Gold_musicalsophistication,BMRQ_total, BMRQ_moodreg, BMRQ_emotion, BMRQ_socialreward,
BMRQ_absorption, BMRQ_musicseek, BMRQ_sensorimotor,QUIC_child_total,
CHAOS_child_total, deprivation_child_total, threat_childhood_total)
variables = dplyr::select(full,
MH_total
View(variables)
full <- merge(scored_data, master,by.x="ID", by.y="ID")
View(scored_data)
View(master)
scored_data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
master <- read.csv(file="../../data/pleasing-displeasing_followup/pleasing_displeasing_scored.csv")
scored_data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
full <- merge(scored_data, master,by.x="ID.1", by.y="ID")
scored_data<-read.csv(file='../../data/pleasing-displeasing_followup/scored_data.csv')
master <- read.csv(file="../../data/pleasing-displeasing_followup/pleasing_displeasing_scored.csv")
#names(scored_data)[20] <- "ID"
master <- master[-1]
names(master)[1] <- "ID"
#scoring
MH <- scored_data %>%
dplyr::select("M.H1_1":"M.H35_1")
MH <- MH[-c(32:34)] %>%
dplyr::select(-c("M.H17_1", "M.H20_1", "M.H18_1","M.H19_1","M.H13_1","M.H27_1","M.H23_1")) %>%
dplyr::select( -c("M.H15_1", "M.H24_1")) %>%
dplyr::select( -c("M.H22_1", "M.H31_1"))
#scoring
cols_reverse <- c("M.H6_1","M.H7_1","M.H12_1","M.H14_1","M.H29_1","M.H30_1",
"M.H32_1")
cols_caregiverbeliefs <- c("M.H1_1","M.H2_1","M.H3_1","M.H4_1")
cols_caregiversinging <- c("M.H9_1","M.H10_1","M.H12_1","M.H16_1")
cols_childhoodattitude <- c("M.H29_1","M.H30_1","M.H32_1")
cols_socialcontexts <- c("M.H21_1","M.H25_1","M.H26_1","M.H28_1")
cols_musicmaking <- c("M.H5_1","M.H6_1","M.H7_1","M.H8_1", "M.H14_1")
# Reverse code
MH[cols_reverse] <- lapply(MH[cols_reverse], reverseCode,  min=1, max=7)
#scoring
scored_data$MH_total <- apply(MH,1, sum) # total BMRQ scores
scored_data$MH_caregiverbeliefs <- apply(MH[cols_caregiverbeliefs], 1,sum)
scored_data$MH_caregiversinging <- apply(MH[cols_caregiversinging],1, sum)
scored_data$MH_childhoodattitude <-apply(MH[cols_childhoodattitude],1, sum)
scored_data$MH_socialcontexts <- apply(MH[cols_socialcontexts],1, sum)
scored_data$MH_musicmaking <- apply(MH[cols_musicmaking],1, sum)
write.csv(scored_data, file='../../data/pleasing-displeasing_followup/scored_data.csv')
full <- merge(scored_data, master,by.x="ID.1", by.y="ID")
#removing anyone missing ELA measures
full <- full[complete.cases(full[391:418]),]
full <- merge(scored_data, master,by.x="ID.1", by.y="ID")
View(full)
#removing anyone missing ELA measures
full <- full[complete.cases(full[394:421]),]
#M@HR + GoldMSI
variables = dplyr::select(full,
MH_total, MH_caregiverbeliefs, MH_caregiversinging, MH_childhoodattitude, MH_socialcontexts, MH_musicmaking,
Gold_activeengagement, Gold_perceptualabilities, Gold_musicaltraining, Gold_singingabilities,
Gold_emotion, Gold_musicalsophistication,BMRQ_total, BMRQ_moodreg, BMRQ_emotion, BMRQ_socialreward,
BMRQ_absorption, BMRQ_musicseek, BMRQ_sensorimotor,QUIC_child_total,
CHAOS_child_total, deprivation_child_total, threat_childhood_total)
output = corr.test(variables)
corr_matrix = output$r
p_matrix <- output$p
colnames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Initation of Singing', 'Attitude towards Childhood Music Environment', 'Social Contexts', 'Child Engagement with Music',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication",'Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor',"QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
rownames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Initation of Singing', 'Attitude towards Childhood Music Environment', 'Social Contexts', 'Child Engagement with Music',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication",'Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor',"QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1))
pdf(file = "../../figures/pleasing:displeasing_followup/EFA_corrplot_totals.pdf")
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1))
dev.off()
pdf(file = "../../figures/pleasing:displeasing_followup/EFA_corrplot_totals.pdf", width = 12, height=12)
pdf(file = "../../figures/pleasing:displeasing_followup/EFA_corrplot_totals.pdf", width = 12, height=12)
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1))
dev.off()
corr_matrix <- subset(corr_matrix[=!1])
corr_matrix <- subset(corr_matrix != )
corr_matrix <- subset(corr_matrix != 1)
corr_matrix = output$r
p_matrix <- output$p
colnames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Initation of Singing', 'Attitude towards Childhood Music Environment', 'Social Contexts', 'Child Engagement with Music',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication",'Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor',"QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
rownames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Initation of Singing', 'Attitude towards Childhood Music Environment', 'Social Contexts', 'Child Engagement with Music',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication",'Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor',"QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
corr_matrix <- corr_matrix[corr_matrix!= 1]
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1))
corr_matrix = output$r
p_matrix <- output$p
colnames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Initation of Singing', 'Attitude towards Childhood Music Environment', 'Social Contexts', 'Child Engagement with Music',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication",'Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor',"QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
rownames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Initation of Singing', 'Attitude towards Childhood Music Environment', 'Social Contexts', 'Child Engagement with Music',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication",'Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor',"QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
corr_matrix <- as.matrix(corr_matrix[corr_matrix!= 1])
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1))
corr_matrix = output$r
p_matrix <- output$p
colnames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Initation of Singing', 'Attitude towards Childhood Music Environment', 'Social Contexts', 'Child Engagement with Music',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication",'Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor',"QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
rownames(corr_matrix) <- c('M@H-R General Score', 'Caregiver Beliefs', 'Caregiver Initation of Singing', 'Attitude towards Childhood Music Environment', 'Social Contexts', 'Child Engagement with Music',
'GoldMSI Active Engagement', "GoldMSI Perceptual Abilities", "GoldMSI Musical Training", "GoldMSI Singing Abilities", "GoldMSI Emotion", "GoldMSI Musical Sophistication",'Total BMRQ', 'Mood Regulation', 'Emotion Evocation', 'Social Reward', 'Absorption', 'Music Seeking',
'Sensorimotor',"QUIC Childhood", "CHAOS Childhood", "Deprivation Childhood", "Threat Childhood")
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1), diag = FALSE)
pdf(file = "../../figures/pleasing:displeasing_followup/EFA_corrplot_totals.pdf", width = 12, height=12)
corrplot(corr_matrix, p.mat = p_matrix, insig = "label_sig",
sig.level = c(0.001,0.01,0.05), pch.cex=0.9, pch.col = "black", tl.col = "black", type="lower",tl.srt =45,
col=colorRampPalette(c("darkblue","white","red"))(100),cl.lim=c(0,1), diag = FALSE)
dev.off()
