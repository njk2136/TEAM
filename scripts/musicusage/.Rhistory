ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Rating") +
xlab("") +
scale_x_discrete(labels = c("Pre", "Post")) +
#coord_cartesian(ylim = c(2,5)) +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
facet_wrap(~rating, scales="free_y") +
ggrepel::geom_label_repel(data=labels, aes(label=stim_type),min.segment.length = Inf, size=3.5) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(liking_musciality_all,file='../figures/liking_musciality_all.png', width=9, dpi=1000)
liking_musciality_all <-
master %>%
mutate(rating = recode(rating, "liking" = "Liking", "speech" = "Musicality")) %>%
mutate(rating = factor(rating, levels = c("Musicality", "Liking"))) %>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Rating") +
xlab("") +
scale_x_discrete(labels = c("Pre", "Post")) +
#coord_cartesian(ylim = c(2,5)) +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
facet_wrap(~rating, scales="free_y") +
ggrepel::geom_label_repel(data=labels, aes(label=stim_type),min.segment.length = Inf, size=3) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(liking_musciality_all,file='../figures/liking_musciality_all.png', width=9, dpi=1000)
labels$value <- ifelse(labels$stim_type=="Control", 2.5, 3.125)
liking_musciality_all <-
master %>%
mutate(rating = recode(rating, "liking" = "Liking", "speech" = "Musicality")) %>%
mutate(rating = factor(rating, levels = c("Musicality", "Liking"))) %>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Rating") +
xlab("") +
scale_x_discrete(labels = c("Pre", "Post")) +
#coord_cartesian(ylim = c(2,5)) +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
facet_wrap(~rating, scales="free_y") +
ggrepel::geom_label_repel(data=labels, aes(label=stim_type),min.segment.length = Inf, size=3.5) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(liking_musciality_all,file='../figures/liking_musciality_all.png', width=9, dpi=1000)
#FIGURE1B
#collapse across stims for each P in each condition for each rating type:
delta <-
masterprepost %>%
group_by(ResponseId, rating, stim_type) %>%
dplyr::summarize(change = mean(change, na.rm=TRUE))
change_liking_musciality_all <-
delta %>%
mutate(rating = recode(rating, "liking" = "Liking", "speech" = "Musicality")) %>%
mutate(rating = factor(rating, levels = c("Musicality", "Liking"))) %>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
ggplot(aes(x=stim_type, y=change, color=stim_type)) +
#ggdist::geom_dotsinterval() +
theme_bw()+
geom_jitter(width=0.3,alpha=0.5) +
geom_boxplot(size=0.5, varwidth=TRUE, outliers = FALSE, color="black", fill=NA)+
geom_hline(color="red", linetype="dashed", yintercept = 0)+
#stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.025, color="black") +
#stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange',color="black", size=0.1) +
#geom_point()+
theme(legend.position = "none")+
ylab("Change in Rating (Post - Pre)") +
xlab("") +
#scale_x_discrete(labels = c("Musicality", "Liking")) +
#coord_cartesian(ylim = c(2,5)) +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
)+
facet_grid(~rating) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(change_liking_musciality_all,file='../figures/change_liking_musciality_all.png', width=7, dpi=1000)
#FIGURE 2A
#updating labels
labels$Q409 <- "Laurel Hearers"
labels$value <- labels$value- 0.05
labels$value <- ifelse(labels$stim_type =="Control", 2.6, 3.3)
LYspeech <- speech_master %>%
mutate(Q409 = recode(Q409, "Laurel" = "Laurel Hearers", "Yanny" = "Yanny Hearers"))%>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Musicality Rating") +
xlab("") +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
coord_cartesian(ylim=c(2,5))+
facet_grid(~Q409) +
scale_x_discrete(labels = c("Pre", "Post")) +
ggrepel::geom_label_repel(data=labels, aes(label=stim_type),min.segment.length = Inf, size=3.5) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(LYspeech,file='../figures/LYspeech.png', width=9, dpi=1000)
labels$value <- ifelse(labels$stim_type =="Control", 2.6, 3.2)
LYspeech <- speech_master %>%
mutate(Q409 = recode(Q409, "Laurel" = "Laurel Hearers", "Yanny" = "Yanny Hearers"))%>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Musicality Rating") +
xlab("") +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
coord_cartesian(ylim=c(2,5))+
facet_grid(~Q409) +
scale_x_discrete(labels = c("Pre", "Post")) +
ggrepel::geom_label_repel(data=labels, aes(label=stim_type),min.segment.length = Inf, size=3.5) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(LYspeech,file='../figures/LYspeech.png', width=9, dpi=1000)
labels$value <- ifelse(labels$stim_type =="Control", 2.6, 3.1)
LYspeech <- speech_master %>%
mutate(Q409 = recode(Q409, "Laurel" = "Laurel Hearers", "Yanny" = "Yanny Hearers"))%>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Musicality Rating") +
xlab("") +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
coord_cartesian(ylim=c(2,5))+
facet_grid(~Q409) +
scale_x_discrete(labels = c("Pre", "Post")) +
ggrepel::geom_label_repel(data=labels, aes(label=stim_type),min.segment.length = Inf, size=3.5) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(LYspeech,file='../figures/LYspeech.png', width=9, dpi=1000)
labels$value <- ifelse(labels$stim_type =="Control", 2.55, 3.1)
LYspeech <- speech_master %>%
mutate(Q409 = recode(Q409, "Laurel" = "Laurel Hearers", "Yanny" = "Yanny Hearers"))%>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Musicality Rating") +
xlab("") +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
coord_cartesian(ylim=c(2,5))+
facet_grid(~Q409) +
scale_x_discrete(labels = c("Pre", "Post")) +
ggrepel::geom_label_repel(data=labels, aes(label=stim_type),min.segment.length = Inf, size=3.5) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(LYspeech,file='../figures/LYspeech.png', width=9, dpi=1000)
labels$value <- ifelse(labels$stim_type =="Control", 2.6, 3.1)
LYspeech <- speech_master %>%
mutate(Q409 = recode(Q409, "Laurel" = "Laurel Hearers", "Yanny" = "Yanny Hearers"))%>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Musicality Rating") +
xlab("") +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
coord_cartesian(ylim=c(2,5))+
facet_grid(~Q409) +
scale_x_discrete(labels = c("Pre", "Post")) +
ggrepel::geom_label_repel(data=labels, aes(label=stim_type),min.segment.length = Inf, size=3.5) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(LYspeech,file='../figures/LYspeech.png', width=9, dpi=1000)
labels$value <- ifelse(labels$stim_type =="Control", 2.6, 3.2)
LYspeech <- speech_master %>%
mutate(Q409 = recode(Q409, "Laurel" = "Laurel Hearers", "Yanny" = "Yanny Hearers"))%>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Musicality Rating") +
xlab("") +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
coord_cartesian(ylim=c(2,5))+
facet_grid(~Q409) +
scale_x_discrete(labels = c("Pre", "Post")) +
ggrepel::geom_label_repel(data=labels, aes(label=stim_type),min.segment.length = Inf, size=3.5) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(LYspeech,file='../figures/LYspeech.png', width=9, dpi=1000)
labels$value <- ifelse(labels$stim_type =="Control", 2.55, 3.2)
LYspeech <- speech_master %>%
mutate(Q409 = recode(Q409, "Laurel" = "Laurel Hearers", "Yanny" = "Yanny Hearers"))%>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Musicality Rating") +
xlab("") +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
coord_cartesian(ylim=c(2,5))+
facet_grid(~Q409) +
scale_x_discrete(labels = c("Pre", "Post")) +
ggrepel::geom_label_repel(data=labels, aes(label=stim_type),min.segment.length = Inf, size=3.5) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(LYspeech,file='../figures/LYspeech.png', width=9, dpi=1000)
LYliking <-
liking_master %>%
mutate(stim_type = recode(stim_type, "illusion" = "Illusion", "control" = "Control")) %>%
mutate(Q409 = recode(Q409, "Laurel" = "Laurel Hearers", "Yanny" = "Yanny Hearers"))%>%
ggplot(aes(x=pre_post, y=value, color=stim_type)) +
#ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0.05, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_bw()+
#geom_jitter(width=0.4,height=0.4,alpha=0.1) +
#geom_line(alpha=0.05, color="black")+
#geom_point()+
theme(legend.position = "none")+
ylab("Liking Rating") +
xlab("") +
theme(
axis.title.x = element_text(family="Arial", size=20,face="bold"),
axis.title.y = element_text(family="Arial",size=20,face="bold"),
axis.text.x = element_text(family="Arial", size=14,face="bold"),
axis.text.y = element_text(family="Arial",size=14,face="bold"),
strip.text = element_text(family="Arial",size=16,color='black',face="bold")
) +
#coord_cartesian(ylim=c(2,5))+
facet_grid(~Q409) +
scale_x_discrete(labels = c("Pre", "Post")) +
scale_color_manual(values=c("#0072B2", "#D55E00" )) +
scale_fill_manual(values=c("#0072B2","#D55E00"))
ggsave(LYliking,file='../figures/LYliking.png', width=9, dpi=1000)
library(tidyverse)
library(lmerTest)
data <- read.csv(file='../data/data_exp_147053-v13_task-3icr.csv')
data2 <- read.csv(file='../data/data_exp_147053-v14_task-3icr.csv')
data3 <- read.csv(file='../data/data_exp_147053-v15_task-3icr.csv')
spreadsheet10 <- read.csv(file='../stimuli/task/spreadsheet10.csv')
data <- rbind(data, data2, data3)
age_data <- read.csv(file='../data/runlog.csv')
#select relevant data for music ratings
dataclean <-
data %>%
dplyr::select("Participant.Public.ID", "counterbalance.5a3y", "display", "blockNum", "Spreadsheet.Row", "Screen.Name","Response", "trial_counter")
dataclean <- dataclean[!(is.na(dataclean$Response) | dataclean$Response=="" | dataclean$Response=="AUDIO PLAY REQUESTED"), ]
dataclean <- subset(dataclean, display == "trial_rate_1" | display == "trial_rate")
dataclean$Screen.Name <- gsub("_1","", dataclean$Screen.Name)
dataclean$Screen.Name <- ifelse(dataclean$Screen.Name=="rating_liking", "rating_like",dataclean$Screen.Name )
dataclean$rating <- ifelse(dataclean$blockNum=="1" | dataclean$blockNum=="2", "pre","post" )
dataclean <- pivot_wider(dataclean, names_from = "Screen.Name", values_from = "Response")
#dataclean <- dataclean %>% group_by(Participant.Public.ID, rating) %>% mutate(pres_order = 1:n())
x=1:nrow(dataclean)
dataclean$clip <- NA
for (i in x) {
dataclean$clip[i] = spreadsheet10[dataclean$Spreadsheet.Row[i],dataclean$counterbalance.5a3y[i]]
}
dataclean <- subset(dataclean, grepl("^BP", dataclean$clip))
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_0.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_4.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_5.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_6.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_3.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='.wav', replacement='')
dataclean$outcome_type <- ifelse(stringr::str_sub(dataclean$clip, -3) == "Man", 'Altered', 'Original')
dataclean[] <- lapply(dataclean, gsub, pattern='_Man', replacement='')
manipulations <- spreadsheet10[12:111]
manipulations <- manipulations[15:97,]
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_0.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_4.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_5.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_6.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_3.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='.wav', replacement='')
manipulations[88,] <- "TEST"
manipulations[89,] <- "TEST2"
#manipulations[80,] <- "TEST3"
#manipulations[69,] <- "TEST4"
manipulations$fnames1[88] <- "BP_Clarinet_13"
manipulations$fnames1[89] <- "BP_Clarinet_17"
#manipulations$fnames1[80] <- "BP_Clarinet_14"
#manipulations$fnames1[69] <- "BP_Clarinet_20"
manipulations[] <- lapply(manipulations, gsub, pattern='_Man', replacement='')
#manipulations <- manipulations[!apply(manipulations == "", 1, all),]
manipulations_final <- lapply(X = manipulations,
FUN = table)
test <- bind_rows(manipulations_final, .id = "fnames")
count(manipulations)
table(manipulations$fnames3)
#manipulations_final <- manipulations_final - 1
#manipulations_final <- ifelse(manipulations_final>1,manipulations_final - 2, manipulations_final - 1)
unique(manipulations_final)
dataclean$manipulation <- NA
x=1:nrow(dataclean)
for (i in x) {
dataclean$manipulation[i] = manipulations_final[[dataclean$counterbalance.5a3y[i]]][[dataclean$clip[i]]]
}
dataclean$manipulation <- dataclean$manipulation -1
dataclean_post <- dataclean %>%
subset(grepl("^BP",clip)) %>%
subset(rating=="post")
dataclean_post$rating_familiarity <- as.numeric(dataclean_post$rating_familiarity)
dataclean_post$rating_like <- as.numeric(dataclean_post$rating_like)
#prelim_postlike <-
ggplot(data=dataclean_post, aes(x=manipulation, y=rating_like, color=outcome_type))+
#geom_point(alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2, alpha=0.7) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.7) +
theme_classic() +
theme( axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
strip.text.x = element_text(family="Arial",size=20),
legend.position = "none") +
ylab("Liking Rating") +
xlab("Exposure (Number of presentations)")+
scale_color_manual(values=c("#E69F00","#56B4E9")) +
scale_fill_manual(values=c("#E69F00","#56B4E9"))
#prelim_postfam <-
ggplot(data=dataclean_post, aes(x=manipulation, y=rating_familiarity, color=outcome_type))+
#geom_point(alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2, alpha=0.7) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.7) +
theme_classic() +
theme( axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
strip.text.x = element_text(family="Arial",size=20),
legend.position = "none") +
ylab("Familiarity Rating") +
xlab("Exposure (Number of presentations)")+
scale_color_manual(values=c("#E69F00","#56B4E9")) +
scale_fill_manual(values=c("#E69F00","#56B4E9"))
dataclean_post$outcome_type <- as.factor(dataclean_post$outcome_type)
contrasts(dataclean_post$outcome_type) <- c(-0.5,0.5)
m1<- lmer(data=dataclean_post, scale(rating_like) ~ scale(manipulation)*outcome_type + (scale(manipulation)*outcome_type|Participant.Public.ID) + (1|clip))
summary(m1)
emmeans::test(emmeans::emtrends(m1, pairwise ~ outcome_type, var = "manipulation"))
View(dataclean_post)
m12<- lmer(data=dataclean_post, scale(rating_like) ~ poly(manipulation, 2,raw = FALSE)*outcome_type + (poly(manipulation, 2,raw = FALSE)*outcome_type|Participant.Public.ID) + (1|clip),control=lmerControl(optimizer="bobyqa"))
summary(m12)
summary(m12)
emmeans::test(emmeans::emtrends(m12, ~outcome_type, "manipulation", lmer.df = "satterthwaite",max.degree = 2, lmerTest.limit = 14516))
m2<- lmer(data=dataclean_post, scale(rating_familiarity) ~ scale(manipulation)*outcome_type + (scale(manipulation)*outcome_type|Participant.Public.ID) + (1|clip))
summary(m2)
emmeans::test(emmeans::emtrends(m2, pairwise ~ outcome_type, var = "manipulation"))
#sep. dev sample
data_clean_dev_DEV <- dataclean_post %>%
subset(grepl("^TEAM_DEV",Participant.Public.ID))
data_clean_dev_301 <- dataclean_post %>%
subset(grepl("^301",Participant.Public.ID))
data_clean_dev <- rbind(data_clean_dev_DEV,data_clean_dev_301)
#prelim_postlike <-
ggplot(data=data_clean_dev, aes(x=manipulation, y=rating_like, color=outcome_type))+
#geom_point(alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2, alpha=0.7) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.7) +
theme_classic() +
theme( axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
strip.text.x = element_text(family="Arial",size=20),
legend.position = "none") +
ylab("Liking Rating") +
xlab("Exposure (Number of presentations)")+
scale_color_manual(values=c("#E69F00","#56B4E9")) +
scale_fill_manual(values=c("#E69F00","#56B4E9"))
#prelim_postfam <-
ggplot(data=data_clean_dev, aes(x=manipulation, y=rating_familiarity, color=outcome_type))+
#geom_point(alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2, alpha=0.7) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.7) +
theme_classic() +
theme( axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
strip.text.x = element_text(family="Arial",size=20),
legend.position = "none") +
ylab("Familiarity Rating") +
xlab("Exposure (Number of presentations)")+
scale_color_manual(values=c("#E69F00","#56B4E9")) +
scale_fill_manual(values=c("#E69F00","#56B4E9"))
m2<- lmer(data=data_clean_dev, scale(rating_familiarity) ~ scale(manipulation)*outcome_type + (scale(manipulation)*outcome_type|Participant.Public.ID) + (1|clip))
summary(m2)
